{"version":3,"file":"index.js","sources":["../src/utils/io/writeDefinedProperty.ts","../src/utils/io/writeExtensionsProperty.ts","../src/gltf/core/def/gltf-property-base.ts","../src/gltf/core/def/enum/gltf-version.ts","../src/gltf/core/def/gltf-asset.ts","../src/gltf/core/def/enum/gltf-attribute-type.ts","../src/gltf/core/def/enum/gltf-component-type.ts","../src/gltf/core/def/enum/gltf-alphamode.ts","../src/gltf/core/def/enum/gltf-filter.ts","../src/gltf/core/def/enum/gltf-wrapmode.ts","../src/gltf/core/def/enum/gltf-primitivemode.ts","../src/gltf/core/def/enum/gltf-vertex-attribute-type.ts","../src/gltf/core/def/enum/mime.ts","../src/gltf/core/def/gltf-accessor-sparse-indices.ts","../src/gltf/core/def/gltf-accessor-sparse-values.ts","../src/gltf/core/def/gltf-accessor-sparse.ts","../src/gltf/core/def/gltf-accessor.ts","../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","../src/gltf/core/def/gltf-buffer.ts","../src/gltf/core/def/enum/gltf-bufferview-target.ts","../src/gltf/core/def/gltf-bufferview.ts","../src/gltf/core/def/gltf-scene.ts","../src/gltf/core/def/gltf-node.ts","../src/gltf/core/def/gltf-primitive-attribute.ts","../src/gltf/core/def/gltf-primitive.ts","../src/gltf/core/def/gltf-mesh.ts","../src/gltf/core/def/gltf-texture-info.ts","../src/gltf/core/def/gltf-normal-texture-info.ts","../src/gltf/core/def/gltf-pbr.ts","../src/gltf/core/def/gltf-material.ts","../src/gltf/core/def/gltf-texture.ts","../node_modules/iobuffer/src/text-encoding-polyfill.js","../node_modules/iobuffer/src/utf8.browser.ts","../node_modules/iobuffer/src/IOBuffer.ts","../src/gltf/core/def/gltf-image.ts","../src/gltf/core/def/gltf-sampler.ts","../src/gltf/core/def/enum/gltf-animation-channel-target-path.ts","../src/gltf/core/def/gltf-animation-channel-target.ts","../src/gltf/core/def/gltf-animation-channel.ts","../src/gltf/core/def/enum/gltf-animation-interpolation.ts","../src/gltf/core/def/gltf-animation-sampler.ts","../src/gltf/core/def/gltf-animation.ts","../src/gltf/core/def/enum/gltf-cameratype.ts","../src/gltf/core/def/gltf-orthographic-camera.ts","../src/gltf/core/def/gltf-perspective-camera.ts","../src/gltf/core/def/gltf-camera.ts","../src/gltf/core/def/gltf-skin.ts","../src/gltf/core/def/gltf-occlusion-texture-info.ts","../src/gltf/core/gltf-document.ts","../src/gltf/ext/gltf-extension-base.ts","../src/gltf/ext/khr/ext-draco.ts","../src/gltf/ext/khr/ext-pbr-specular-glossiness.ts","../src/gltf/ext/vdr/ext-texture-webp.ts","../src/gltf/ext/vdr/ext-texture-dds.ts","../src/gltf/ext/vdr/ext-geometry-metadata.ts","../src/gltf/ext/vdr/ext-primitive-outline.ts","../src/gltf/ext/vdr/ext-meshopt-compression.ts","../src/gltf/ext/vdr/ext-lod.ts","../src/gltf/ext/vdr/ext-materials-thin-transparency.ts","../src/gltf/io/write-action/gltf-add-action.ts","../src/gltf/io/write-action/gltf-drop-action.ts","../src/gltf/io/write-action/gltf-update-action.ts","../src/gltf/io/write-action/action-data/gltf-vertex-attributes.ts","../src/gltf/io/write-action/action-data/gltf-vertex-buffer.ts","../src/gltf/io/write-action/action-data/gltf-vertex-indices.ts","../src/gltf/io/read-util/read-gltf.ts","../src/gltf/io/read-util/read-glb.ts","../src/utils/array-minmax.ts","../src/gltf/io/builder-api/gltf-vertex-buffer-object.ts","../src/gltf/io/builder-api/gltf-primitive-builder.ts","../src/tileset/ext/ext-base.ts","../src/tileset/ext/ext-batchtable-hierarchy.ts","../src/tileset/ext/ext-pnts-draco.ts","../src/tileset/ext/ext-content-gltf.ts","../src/tileset/ext/ext-implicit-tiling.ts","../src/tileset/ext/ext-layers.ts","../src/tileset/ext/ext-metadata.ts","../src/tileset/ext/ext-multiple-content.ts","../src/tileset/core/def/tile.ts","../src/tileset/core/def/tileset.ts","../src/tileset/core/def/tile-bounding-volume.ts","../src/tileset/core/def/tile-content.ts","../src/tileset/core/def/property.ts","../src/tileset/core/def/asset.ts","../src/tileset/core/def/tile-header-base.ts","../src/tileset/core/def/tile-b3dm/header.ts","../src/tileset/core/def/enum/featuretable-type.ts","../src/tileset/core/def/featuretable/featuretable-base.ts","../src/tileset/core/def/featuretable/featuretable-b3dm.ts","../src/tileset/core/def/batchtable/batchtable-base.ts","../src/tileset/core/def/tile-b3dm/index.ts","../src/tileset/core/def/tile-i3dm/header.ts","../src/tileset/core/def/featuretable/featuretable-i3dm.ts","../src/tileset/core/def/tile-i3dm/index.ts","../src/tileset/core/def/tile-pnts/header.ts","../src/tileset/core/def/featuretable/featuretable-pnts.ts","../src/tileset/core/def/tile-pnts/index.ts","../src/tileset/core/def/tile-cmpt/index.ts","../src/tileset/core/def/featuretable/featuretable-vctr.ts","../src/tileset/core/def/enum/tile-refine.ts"],"sourcesContent":["function writeDefinedProperty(obj: any, name: string, data: any) {\r\n  if (data !== undefined)\r\n    Object.defineProperty(obj, name, {\r\n      value: data,\r\n      enumerable: true,\r\n      writable: true,\r\n      configurable: true\r\n    })\r\n}\r\n\r\nexport default writeDefinedProperty","import { GLTFExtensionBase } from \"src/gltf\";\r\n\r\nfunction writeExtensionsProperty(obj: any, exts?: Set<GLTFExtensionBase>) {\r\n  if (exts !== undefined) {\r\n    const extObj = {}\r\n    const _ = [...exts]\r\n    _.forEach(ext => {\r\n      Object.defineProperty(extObj, ext.name, {\r\n        value: ext.json()\r\n      })\r\n    })\r\n    Object.defineProperty(obj, 'extensions', {\r\n      value: extObj\r\n    })\r\n  }\r\n}\r\n\r\nexport default writeExtensionsProperty","import { GLTFExtensionBase } from \"src/gltf/ext\"\r\nimport { ISerializable, IValidate } from \"src/interfaces\"\r\nimport GLTFDocument from \"../gltf-document\"\r\n\r\nexport default class GLTFPropertyBase implements IValidate, ISerializable {\r\n  extensions?: Set<GLTFExtensionBase>\r\n  extras?: any\r\n  protected _doc?: GLTFDocument\r\n  get doc() {\r\n    return this._doc\r\n  }\r\n  set doc(doc) {\r\n    this._doc = doc\r\n  }\r\n  \r\n  validate() {\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    return {}\r\n  }\r\n}","enum GLTFVersion {\r\n  TWO = \"2.0\",\r\n  ONE = \"1.0\"\r\n}\r\n\r\nexport const GLTFVersionValues = Object.freeze(Object.values(GLTFVersion) as Array<string>)\r\n\r\nexport default GLTFVersion","import { IGLTFAsset } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport GLTFVersion, { GLTFVersionValues } from \"./enum/gltf-version\"\r\n\r\nclass GLTFAsset extends GLTFPropertyBase {\r\n  version: GLTFVersion = GLTFVersion.TWO\r\n  generator?: string\r\n  copyright?: string\r\n  minVersion?: GLTFVersion\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  validate() {\r\n    return true\r\n  }\r\n  json() {\r\n    const asset = {\r\n      version: this.version\r\n    }\r\n    writeDefinedProperty(asset, 'generator', this.generator)\r\n    writeDefinedProperty(asset, 'minVersion', this.minVersion)\r\n    writeDefinedProperty(asset, 'copyright', this.copyright)\r\n    writeDefinedProperty(asset, 'extensions', this.generator)\r\n    writeDefinedProperty(asset, 'extras', this.extras)\r\n\r\n    return asset\r\n  }\r\n\r\n  static readFromJson(json: IGLTFAsset): GLTFAsset {\r\n    const asset = new GLTFAsset()\r\n    if (GLTFVersionValues.includes(json.version)) {\r\n      asset.version = json.version as GLTFVersion\r\n    } else {\r\n      throw new Error(`[GLTFAsset.readFromJson()] 参数 version：${json.version} 不合法，请检查`)\r\n    }\r\n\r\n    if (json.minVersion !== undefined) {\r\n      if (GLTFVersionValues.includes(json.minVersion))\r\n        asset.minVersion = json.version as GLTFVersion\r\n      else\r\n        throw new Error(`[GLTFAsset.readFromJson()] 参数 minVersion: ${json.minVersion} 不合法，请检查`)\r\n    }\r\n    asset.copyright = json.copyright\r\n    asset.generator = json.generator\r\n    asset.extras = json.extras\r\n    return asset\r\n  }\r\n}\r\n\r\nexport default GLTFAsset","enum GLTFAttributeType {\r\n  SCALAR = \"SCALAR\",\r\n  VEC2 = \"VEC2\",\r\n  VEC3 = \"VEC3\",\r\n  VEC4 = \"VEC4\",\r\n  MAT2 = \"MAT2\",\r\n  MAT3 = \"MAT3\",\r\n  MAT4 = \"MAT4\",\r\n}\r\n\r\nexport const GLTFAttributeTypeValues = Object.freeze(Object.values(GLTFAttributeType) as Array<string>)\r\n\r\nexport const getAttributeTypeElementCount = (t: GLTFAttributeType): number => {\r\n  switch (t) {\r\n    case GLTFAttributeType.VEC2:\r\n      return 2\r\n    case GLTFAttributeType.VEC3:\r\n      return 3\r\n    case GLTFAttributeType.VEC4:\r\n    case GLTFAttributeType.MAT2:\r\n      return 4\r\n    case GLTFAttributeType.MAT3:\r\n      return 9\r\n    case GLTFAttributeType.MAT4:\r\n      return 16\r\n    default: // means SCALAR\r\n      return 1\r\n  }\r\n}\r\n\r\nexport default GLTFAttributeType","enum GLTFComponentType {\r\n  BYTE = 5120,\r\n  UNSIGNED_BYTE = 5121,\r\n  SHORT = 5122,\r\n  UNSIGNED_SHORT = 5123,\r\n  UNSIGNED_INT = 5125,\r\n  FLOAT = 5126\r\n}\r\n\r\nexport const GLTFComponentTypeValues = Object.freeze(Object.values(GLTFComponentType) as Array<number>)\r\n\r\nexport const getComponentTypeByteSize = (t: GLTFComponentType): number => {\r\n  switch (t) {\r\n    case GLTFComponentType.BYTE:\r\n    case GLTFComponentType.UNSIGNED_BYTE:\r\n      return 1\r\n    case GLTFComponentType.SHORT:\r\n    case GLTFComponentType.UNSIGNED_SHORT:\r\n      return 2\r\n    case GLTFComponentType.UNSIGNED_INT:\r\n      return 4\r\n    default: // means FLOAT 32bit 5126 - glTF 里没有 8 位浮点数\r\n      return 4\r\n  }\r\n}\r\n\r\nexport default GLTFComponentType","/**\r\n * @enum {GLTFAlphaMode} 透明度模式\r\n */\r\nenum GLTFAlphaMode {\r\n  /** \r\n   * @description 不透明。默认选项。\r\n   */\r\n  OPAQUE = \"OPAQUE\",\r\n  /**\r\n   * @description 透明度取决于 alphaCutOff 值，即半透明\r\n   */\r\n  MASK = \"MASK\",\r\n  /**\r\n   * @description 混合模式\r\n   */\r\n  BLEND = \"BLEND\"\r\n}\r\n\r\nexport const GLTFAlphaModeValues = Object.freeze(Object.values(GLTFAlphaMode) as Array<string>)\r\n\r\nexport default GLTFAlphaMode","enum GLTFFilter {\r\n  NEAREST = 9728,\r\n  LINEAR = 9729,\r\n  NEAREST_MIPMAP_NEAREST = 9984,\r\n  LINEAR_MIPMAP_NEAREST = 9985,\r\n  NEAREST_MIPMAP_LINEAR = 9986,\r\n  LINEAR_MIPMAP_LINEAR = 9987\r\n}\r\n\r\nexport const GLTFFilterValues = Object.freeze(Object.values(GLTFFilter) as Array<number>)\r\n\r\nexport default GLTFFilter","enum GLTFWrapMode {\r\n  REPEAT = 10497,\r\n  CLAMP_TO_EDGE = 33071,\r\n  MIRRORED_REPEAT = 33648,\r\n}\r\n\r\nexport const GLTFWrapModeValues = Object.freeze(Object.values(GLTFWrapMode) as Array<number>)\r\n\r\nexport default GLTFWrapMode","enum GLTFPrimitiveMode {\r\n  POINTS = 0,\r\n  LINES = 1,\r\n  LINE_LOOP = 2,\r\n  LINE_STRIP = 3,\r\n  TRIANGLES = 4,\r\n  TRIANGLE_STRIP = 5,\r\n  TRIANGLE_FAN = 6\r\n}\r\n\r\nexport const GLTFPrimitiveModeValues = Object.freeze(Object.values(GLTFPrimitiveMode) as Array<number>)\r\n\r\nexport default GLTFPrimitiveMode","enum GLTFVertexAttributeType {\r\n  POSITION = \"position\",\r\n  UV0 = \"uv0\",\r\n  UV1 = \"uv1\",\r\n  COLOR0 = \"color0\",\r\n  TANGENT = \"tangent\",\r\n  NORMAL = \"normal\",\r\n  JOINTS0 = \"joints0\",\r\n  WEIGHTS0 = \"weights0\",\r\n  BATCHID = \"batchid\"\r\n}\r\n\r\nexport default GLTFVertexAttributeType","enum MIME {\r\n  JPG = \"image/jpg\",\r\n  JPEG = \"image/jpeg\",\r\n  PNG = \"image/png\",\r\n  WEBP = \"image/webp\",\r\n  DDS = \"image/vnd-ms.dds\",\r\n}\r\n\r\nexport const MIMEValues = Object.freeze(Object.values(MIME) as string[])\r\n\r\nexport default MIME","import { IGLTFAccessorSparseIndices } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport { GLTFComponentType } from \"./enum\"\r\nimport { GLTFComponentTypeValues } from \"./enum/gltf-component-type\"\r\n\r\nclass GLTFAccessorSparseIndices extends GLTFPropertyBase {\r\n  bufferView: number\r\n  byteOffset: number\r\n  componentType: GLTFComponentType\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  validate() {\r\n    if (\r\n      this.componentType !== GLTFComponentType.UNSIGNED_BYTE &&\r\n      this.componentType !== GLTFComponentType.UNSIGNED_INT &&\r\n      this.componentType !== GLTFComponentType.UNSIGNED_SHORT\r\n    ) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFAccessorSparseIndices json()] 此 accessor.sparse.indices 的属性不合法，请检查')\r\n    }\r\n\r\n    const i = {\r\n      bufferView: this.bufferView,\r\n      byteOffset: this.byteOffset,\r\n      componentType: this.componentType,\r\n    }\r\n\r\n    writeExtensionsProperty(i, this.extensions)\r\n    writeDefinedProperty(i, 'extras', this.extras)\r\n\r\n    return i\r\n  }\r\n\r\n  static readFromJson(json: IGLTFAccessorSparseIndices) {\r\n    const accSparseIndices = new GLTFAccessorSparseIndices()\r\n\r\n    accSparseIndices.extras = json.extras\r\n    accSparseIndices.bufferView = json.bufferView\r\n    accSparseIndices.byteOffset = json.byteOffset\r\n    if (GLTFComponentTypeValues.includes(json.componentType)) {\r\n      accSparseIndices.componentType = json.componentType as GLTFComponentType\r\n    }\r\n\r\n    return accSparseIndices\r\n  }\r\n}\r\n\r\nexport default GLTFAccessorSparseIndices","import { IGLTFAccessorSparseValues } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\n\r\nclass GLTFAccessorSparseValues extends GLTFPropertyBase {\r\n  bufferView: number\r\n  byteOffset?: number\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  validate() {\r\n    if (this.byteOffset && this.byteOffset < 0) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFAccessorSparseValues json()] 此 accessor.sparse.values 的属性不合法，请检查')\r\n    }\r\n\r\n    const v = {\r\n      bufferView: this.bufferView\r\n    }\r\n\r\n    writeDefinedProperty(v, 'byteOffset', this.byteOffset)\r\n    writeExtensionsProperty(v, this.extensions)\r\n    writeDefinedProperty(v, 'extras', this.extras)\r\n\r\n    return v\r\n  }\r\n\r\n  static readFromJson(json: IGLTFAccessorSparseValues) {\r\n    const vals = new GLTFAccessorSparseValues()\r\n\r\n    vals.bufferView = json.bufferView\r\n    vals.byteOffset = json.byteOffset\r\n    vals.extras = json.extras\r\n\r\n    return vals\r\n  }\r\n}\r\n\r\nexport default GLTFAccessorSparseValues","import { IGLTFAccessorSparse } from \"src/interfaces/IGLTFObj\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport GLTFAccessorSparseIndices from \"./gltf-accessor-sparse-indices\"\r\nimport GLTFAccessorSparseValues from \"./gltf-accessor-sparse-values\"\r\n\r\nclass GLTFAccessorSparse extends GLTFPropertyBase {\r\n  count: number\r\n  indices: GLTFAccessorSparseIndices\r\n  values: GLTFAccessorSparseValues\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  validate() {\r\n    return this.count > 0 && this.values.validate() && this.indices.validate()\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFAccessorSparse json()] 此 sparse 对象属性不合法，请检查属性')\r\n    }\r\n\r\n    const spr = {\r\n      count: this.count,\r\n      indices: this.indices.json(),\r\n      values: this.values.json()\r\n    }\r\n\r\n    return spr\r\n  }\r\n\r\n  static readFromJson(json: IGLTFAccessorSparse) {\r\n    const sparse = new GLTFAccessorSparse()\r\n    sparse.indices = GLTFAccessorSparseIndices.readFromJson(json.indices)\r\n    sparse.values = GLTFAccessorSparseValues.readFromJson(json.values)\r\n    sparse.extras = json.extras\r\n\r\n    return sparse\r\n  }\r\n}\r\n\r\nexport default GLTFAccessorSparse","import { IGLTFAccessor } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport { GLTFAttributeType, GLTFComponentType } from \"./enum\"\r\nimport { GLTFAttributeTypeValues } from \"./enum/gltf-attribute-type\"\r\nimport { GLTFComponentTypeValues } from \"./enum/gltf-component-type\"\r\nimport GLTFAccessorSparse from \"./gltf-accessor-sparse\"\r\n\r\nclass GLTFAccessor extends GLTFPropertyBase {\r\n  componentType: GLTFComponentType\r\n  count: number\r\n  type: GLTFAttributeType\r\n  max?: number[]\r\n  min?: number[]\r\n  sparse?: GLTFAccessorSparse\r\n  name?: string\r\n  normalized?: boolean\r\n  bufferView?: number\r\n  byteOffset?: number\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  validate() {\r\n    /** byteOffset 和 bufferView 必须同时存在 */\r\n    const offsetExist = this.byteOffset === undefined ? 1 : 0\r\n    const viewExist = this.bufferView === undefined ? 1 : 0\r\n    if (offsetExist + viewExist === 1) {\r\n      return false\r\n    }\r\n    if (this.byteOffset && this.byteOffset < 0) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFAccessor json()] 当前 accessor 属性不合法，请检查')\r\n    }\r\n\r\n    const acc = {\r\n      componentType: this.componentType,\r\n      type: this.type,\r\n      count: this.count,\r\n    }\r\n\r\n    writeDefinedProperty(acc, 'max', this.max)\r\n    writeDefinedProperty(acc, 'min', this.min)\r\n    writeDefinedProperty(acc, 'name', this.name)\r\n    writeDefinedProperty(acc, 'normalized', this.normalized)\r\n    writeDefinedProperty(acc, 'sparse', this.sparse !== undefined ? this.sparse.json() : undefined)\r\n    writeDefinedProperty(acc, 'bufferView', this.bufferView)\r\n    writeDefinedProperty(acc, 'byteOffset', this.byteOffset)\r\n    writeExtensionsProperty(acc, this.extensions)\r\n    writeDefinedProperty(acc, 'extras', this.extras)\r\n    \r\n    return acc\r\n  }\r\n\r\n  static fromJson(json: IGLTFAccessor) {\r\n    const acc = new GLTFAccessor()\r\n    if (GLTFComponentTypeValues.includes(json.componentType)) {\r\n      acc.componentType = json.componentType as GLTFComponentType\r\n    } else {\r\n      throw new Error('[GLTFAccessor.readFromJson()] 属性 componentType 非法')\r\n    }\r\n    acc.count = json.count\r\n    if (GLTFAttributeTypeValues.includes(json.type)) {\r\n      acc.type = json['type'] as GLTFAttributeType\r\n    } else {\r\n      throw new Error('[readGLTF() readAccessors()] 属性 type 非法')\r\n    }\r\n    acc.max = json.max\r\n    acc.min = json.min\r\n    if (json.sparse !== undefined) {\r\n      acc.sparse = GLTFAccessorSparse.readFromJson(json.sparse)\r\n    }\r\n    acc.normalized = json.normalized\r\n    acc.bufferView = json.bufferView\r\n    acc.byteOffset = json.byteOffset\r\n    acc.name = json.name\r\n    acc.extras = json.extras\r\n    return acc\r\n  }\r\n}\r\n\r\nexport default GLTFAccessor","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","import { decode } from 'base64-arraybuffer'\r\nimport { IGLTFBuffer } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\n\r\nfunction isDataUrl(str: string) {\r\n  return str.startsWith('data:')\r\n}\r\n\r\nclass GLTFBuffer extends GLTFPropertyBase {\r\n  byteLength: number = 0\r\n  uri?: string\r\n  bufferData?: ArrayBuffer\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  /** @deprecated */\r\n  get url() {\r\n    return this.uri\r\n  }\r\n\r\n  validate() {\r\n    return this.byteLength > 0\r\n  }\r\n\r\n  json() {\r\n    const bf = {\r\n      byteLength: this.byteLength\r\n    }\r\n    writeDefinedProperty(bf, 'uri', this.uri)\r\n    writeExtensionsProperty(bf, this.extensions)\r\n    writeDefinedProperty(bf, 'extras', this.extras)\r\n\r\n    return bf\r\n  }\r\n\r\n  static fromJson(json: IGLTFBuffer) {\r\n    const bf = new GLTFBuffer()\r\n    bf.uri = json.uri\r\n    if (bf.uri && isDataUrl(bf.uri)) {\r\n      bf.bufferData = decode(bf.uri.substr(bf.uri.indexOf(',') + 1))\r\n    }\r\n    bf.byteLength = json.byteLength\r\n    bf.extras = json.extras\r\n    // extensions 单独处理\r\n    return bf\r\n  }\r\n}\r\n\r\nexport default GLTFBuffer","enum GLTFBufferViewTarget {\r\n  ARRAY_BUFFER = 34962,\r\n  ELEMENT_ARRAY_BUFFER = 34963\r\n}\r\n\r\nexport const GLTFBufferViewTargetValues = Object.freeze(Object.values(GLTFBufferViewTarget) as Array<number>)\r\n\r\nexport default GLTFBufferViewTarget","import { IGLTFBufferView } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport GLTFBufferViewTarget, { GLTFBufferViewTargetValues } from \"./enum/gltf-bufferview-target\"\r\n\r\nclass GLTFBufferView extends GLTFPropertyBase {\r\n  buffer: number = 0\r\n  byteLength: number = 1\r\n  byteOffset?: number = 0\r\n  byteStride?: number = 4\r\n  target?: GLTFBufferViewTarget\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  validate() {\r\n    if (this.buffer < 0) {\r\n      return false\r\n    }\r\n    if (this.byteLength < 1) {\r\n      return false\r\n    }\r\n    if (this.byteOffset && this.byteOffset < 0) {\r\n      return false\r\n    }\r\n    if (this.byteStride && (this.byteStride % 4 !== 0 || this.byteStride > 252 || this.byteStride < 4)) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFBufferView json()] 当前 bufferView 属性不合法，请检查')\r\n    }\r\n\r\n    const bv = {\r\n      buffer: this.buffer,\r\n      byteLength: this.byteLength,\r\n    }\r\n\r\n    if (this.target === GLTFBufferViewTarget.ARRAY_BUFFER || this.target === GLTFBufferViewTarget.ELEMENT_ARRAY_BUFFER) {\r\n      writeDefinedProperty(bv, 'target', this.target)\r\n    }\r\n    writeDefinedProperty(bv, 'byteOffset', this.byteOffset)\r\n    if (this.byteStride !== 4) {\r\n      writeDefinedProperty(bv, 'byteStride', this.byteStride)\r\n    }\r\n    writeExtensionsProperty(bv, this.extensions)\r\n    writeDefinedProperty(bv, 'extras', this.extras)\r\n\r\n    return bv\r\n  }\r\n\r\n  static fromJson(json: IGLTFBufferView) {\r\n    const bv = new GLTFBufferView()\r\n    bv.buffer = json.buffer\r\n    bv.byteLength = json.byteLength\r\n    bv.byteOffset = json.byteOffset\r\n    bv.extras = json.extras\r\n    if (json.target !== undefined && GLTFBufferViewTargetValues.includes(json.target)) {\r\n      bv.target = json.target as GLTFBufferViewTarget\r\n    }\r\n    return bv\r\n  }\r\n}\r\n\r\nexport default GLTFBufferView","import { IGLTFScene } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\n\r\nclass GLTFScene extends GLTFPropertyBase {\r\n  nodes: number[] = []\r\n  name?: string\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  validate() {\r\n    return this.nodes.length > 1\r\n  }\r\n\r\n  json() {\r\n    const s = {\r\n      nodes: this.nodes\r\n    }\r\n    writeDefinedProperty(s, 'name', this.name)\r\n    writeExtensionsProperty(s, this.extensions)\r\n    return s\r\n  }\r\n\r\n  static fromJson(json: IGLTFScene) {\r\n    const scene = new GLTFScene()\r\n    scene.name = json.name\r\n    scene.nodes = json.nodes\r\n    scene.extras = json.extras\r\n    return scene\r\n  }\r\n}\r\n\r\nexport default GLTFScene","import { IGLTFNode } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\n\r\nfunction validateTransforms(nd: GLTFNode) {\r\n  let flag = true\r\n  if (nd.matrix !== undefined) {\r\n    if (nd.rotation !== undefined || nd.scale !== undefined || nd.translation !== undefined) {\r\n      flag = false\r\n    }\r\n  } else if (nd.rotation === undefined && nd.scale === undefined && nd.translation === undefined) {\r\n    flag = false\r\n  }\r\n\r\n  if (nd.rotation) {\r\n    flag = nd.rotation.every(r => r > 1 || r < -1)\r\n  }\r\n\r\n  return flag\r\n}\r\n\r\nclass GLTFNode extends GLTFPropertyBase {\r\n  children: number[] = []\r\n  mesh?: number\r\n  rotation?: [number, number, number, number]\r\n  translation?: [number, number, number]\r\n  weights?: number[]\r\n  name?: string\r\n  skin?: number\r\n  camera?: number\r\n  matrix?: [\r\n    number, number, number, number,\r\n    number, number, number, number,\r\n    number, number, number, number,\r\n    number, number, number, number\r\n  ]\r\n  scale?: [number, number, number]\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  getMesh() {\r\n    if (this.doc === undefined) {\r\n      return null\r\n    }\r\n    if (this.mesh === undefined) {\r\n      return null\r\n    } else if (this.doc.meshes.length < this.mesh) {\r\n      return null\r\n    }\r\n    \r\n    return this.doc.meshes[this.mesh]\r\n  }\r\n\r\n  validate() {\r\n    if (!validateTransforms(this)) {\r\n      return false\r\n    }\r\n    if (this.weights && this.weights.length < 1) {\r\n      return false\r\n    } else if (this.weights !== undefined && this.mesh === undefined) {\r\n      return false\r\n    }\r\n    if (this.skin !== undefined && this.mesh === undefined) {\r\n      return false\r\n    }\r\n\r\n    if (this.children && this.children.length > 1) {\r\n      if (new Set(this.children).size !== this.children.length)\r\n        return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFNode json()] 当前 node 属性不合法，请检查属性')\r\n    }\r\n\r\n    const n = {}\r\n\r\n    writeDefinedProperty(n, 'mesh', this.mesh)\r\n    writeDefinedProperty(n, 'rotation', this.rotation)\r\n    writeDefinedProperty(n, 'translation', this.translation)\r\n    writeDefinedProperty(n, 'scale', this.scale)\r\n    const m = this.matrix\r\n    if (m) {\r\n      if (!(m[0] === 1 && m[5] === 1 && m[10] === 1 && m[15] === 1)) {\r\n        writeDefinedProperty(n, 'matrix', this.matrix)\r\n      }\r\n    }\r\n    writeDefinedProperty(n, 'weights', this.weights)\r\n    writeDefinedProperty(n, 'skin', this.skin)\r\n    writeDefinedProperty(n, 'camera', this.camera)\r\n    writeDefinedProperty(n, 'name', this.name)\r\n\r\n    if (this.children && this.children.length !== 0) {\r\n      writeDefinedProperty(n, 'children', this.children)\r\n    }\r\n    writeExtensionsProperty(n, this.extensions)\r\n    writeDefinedProperty(n, 'extras', this.extras)\r\n\r\n    return n\r\n  }\r\n\r\n  static fromJson(json: IGLTFNode) {\r\n    const node = new GLTFNode()\r\n    node.name = json.name\r\n    node.mesh = json.mesh\r\n    node.matrix = json.matrix\r\n    node.rotation = json.rotation\r\n    node.scale = json.scale\r\n    node.skin = json.skin\r\n    node.children = json.children\r\n    node.weights = json.weights\r\n    node.translation = json.translation\r\n    node.camera = json.camera\r\n    node.extras = json.extras\r\n    return node\r\n  }\r\n}\r\n\r\nexport default GLTFNode","import { IGLTFPrimitiveAttribute } from \"src/interfaces/IGLTFObj\"\r\nimport ISerializable from \"src/interfaces/ISerializable\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport IValidate from \"../../../interfaces/IValidate\"\r\n\r\nclass GLTFPrimitiveAttribute implements IValidate, ISerializable {\r\n\r\n  position: number\r\n  uv0?: number\r\n  uv1?: number\r\n  color0?: number\r\n  normal?: number\r\n  tangent?: number\r\n  joints0?: number\r\n  weights0?: number\r\n  /** 3rd */\r\n  _batchid?: number\r\n\r\n  static fromJson(json: IGLTFPrimitiveAttribute): GLTFPrimitiveAttribute {\r\n    const attr = new GLTFPrimitiveAttribute()\r\n    attr.position = json.POSITION\r\n    attr.uv0 = json.TEXCOORD_0\r\n    attr.uv1 = json.TEXCOORD_1\r\n    attr.color0 = json.COLOR_0\r\n    attr.normal = json.NORMAL\r\n    attr.tangent = json.TANGENT\r\n    attr.joints0 = json.JOINTS_0\r\n    attr.weights0 = json.WEIGHTS_0\r\n    attr._batchid = json._BATCHID\r\n    return attr\r\n  }\r\n\r\n  validate() {\r\n    return Object.values(this).every(k => k! < 0)\r\n  }\r\n\r\n  json() {\r\n    const attr = {\r\n      POSITION: this.position,\r\n    }\r\n    writeDefinedProperty(attr, 'NORMAL', this.normal)\r\n    writeDefinedProperty(attr, 'TANGENT', this.tangent)\r\n    writeDefinedProperty(attr, 'TEXCOORD_0', this.uv0)\r\n    writeDefinedProperty(attr, 'TEXCOORD_1', this.uv1)\r\n    writeDefinedProperty(attr, 'COLOR_0', this.color0)\r\n    writeDefinedProperty(attr, 'JOINTS_0', this.joints0)\r\n    writeDefinedProperty(attr, 'WEIGHTS_0', this.weights0)\r\n    writeDefinedProperty(attr, '_BATCHID', this._batchid)\r\n\r\n    return attr\r\n  }\r\n}\r\n\r\nexport default GLTFPrimitiveAttribute","import { IGLTFPrimitive } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport GLTFPrimitiveMode, { GLTFPrimitiveModeValues } from \"./enum/gltf-primitivemode\"\r\nimport GLTFPrimitiveAttribute from \"./gltf-primitive-attribute\"\r\n\r\nclass GLTFPrimitive extends GLTFPropertyBase {\r\n\r\n  attributes: GLTFPrimitiveAttribute = new GLTFPrimitiveAttribute()\r\n  indices?: number\r\n  material?: number\r\n  mode?: GLTFPrimitiveMode = GLTFPrimitiveMode.TRIANGLES\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  /**\r\n   * 获取对应顶点属性的访问器\r\n   * @param {string} attrName 顶点属性名，允许值是：\r\n   * `'uv0'` | `'uv'`(等同uv0) | `'uv1'` | `'color0'` | `'color'` |\r\n   * `'normal'` | `'tangent'` | `'joints0'` | `'joints'` | `'weights0'` | \r\n   * `'weights'` | `'_batchid'` | `'batchid'`\r\n   * \r\n   * 大写小写均可，例如 `'UV0'` 和 `'uv'`、`'uv0'` 是一样的\r\n   * @returns {GLTFAccessor | undefined}\r\n   */\r\n  getAccessor(attrName: string) {\r\n    switch (attrName.toLowerCase()) {\r\n      case 'uv0':\r\n      case 'uv':\r\n        if (this.attributes.uv0 !== undefined) {\r\n          return this.doc?.accessors[this.attributes.uv0]\r\n        }\r\n        return undefined\r\n      case 'uv1':\r\n        if (this.attributes.uv1 !== undefined) {\r\n          return this.doc?.accessors[this.attributes.uv1]\r\n        }\r\n        return undefined\r\n      case 'color0':\r\n      case 'color':\r\n        if (this.attributes.color0 !== undefined) {\r\n          return this.doc?.accessors[this.attributes.color0]\r\n        }\r\n        return undefined\r\n      case 'normal':\r\n        if (this.attributes.normal !== undefined) {\r\n          return this.doc?.accessors[this.attributes.normal]\r\n        }\r\n        return undefined\r\n      case 'tangent':\r\n        if (this.attributes.tangent !== undefined) {\r\n          return this.doc?.accessors[this.attributes.tangent]\r\n        }\r\n        return undefined\r\n      case 'joints0':\r\n      case 'joints':\r\n        if (this.attributes.joints0 !== undefined) {\r\n          return this.doc?.accessors[this.attributes.joints0]\r\n        }\r\n        return undefined\r\n      case 'weights0':\r\n      case 'weights':\r\n        if (this.attributes.weights0 !== undefined) {\r\n          return this.doc?.accessors[this.attributes.weights0]\r\n        }\r\n        return undefined\r\n      case '_batchid':\r\n      case 'batchid':\r\n        if (this.attributes._batchid !== undefined) {\r\n          return this.doc?.accessors[this.attributes._batchid]\r\n        }\r\n        return undefined\r\n      default:\r\n        return this.doc?.accessors[this.attributes.position]\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    if (this.attributes.validate() === false) {\r\n      return false\r\n    }\r\n    if (this.indices! < 0) {\r\n      return false\r\n    }\r\n    if (this.material! < 0) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    const prmt = {\r\n      attributes: this.attributes.json()\r\n    }\r\n    if (this.mode !== GLTFPrimitiveMode.TRIANGLES && this.mode !== undefined) {\r\n      writeDefinedProperty(prmt, 'mode', this.mode)\r\n    }\r\n    writeDefinedProperty(prmt, 'indices', this.indices)\r\n    writeDefinedProperty(prmt, 'material', this.material)\r\n    writeExtensionsProperty(prmt, this.extensions)\r\n    writeDefinedProperty(prmt, 'extras', this.extras)\r\n\r\n    return prmt\r\n  }\r\n\r\n  static fromJson(json: IGLTFPrimitive) {\r\n    const prmt = new GLTFPrimitive()\r\n    prmt.indices = json.indices\r\n    prmt.material = json.material\r\n    if (json.mode !== undefined && json.mode !== 4) {\r\n      if (GLTFPrimitiveModeValues.includes(json.mode)) {\r\n        prmt.mode = json.mode as GLTFPrimitiveMode\r\n      } else {\r\n        throw new Error(`[GLTFPrimitive.readFromJson()] mode：${json.mode} 不合法，请检查`)\r\n      }\r\n    }\r\n    prmt.attributes = GLTFPrimitiveAttribute.fromJson(json.attributes)\r\n    return prmt\r\n  }\r\n}\r\n\r\nexport default GLTFPrimitive","import { IGLTFMesh } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport GLTFPrimitive from \"./gltf-primitive\"\r\nimport { GLTFDocument } from \"..\"\r\n\r\nclass GLTFMesh extends GLTFPropertyBase {\r\n  primitives: GLTFPrimitive[] = []\r\n  weights?: number[]\r\n  name?: string\r\n  \r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  set doc(value: GLTFDocument) {\r\n    this._doc = value\r\n    this.primitives.forEach(p => p.doc = value)\r\n  }\r\n\r\n  validate() {\r\n    let flag = false\r\n    if (this.primitives.every(primitive => primitive.validate())) {\r\n      flag = true\r\n    }\r\n    return flag\r\n  }\r\n\r\n  json() {\r\n    const mesh = {\r\n      primitives: this.primitives.map(prmt => prmt.json())\r\n    }\r\n    writeDefinedProperty(mesh, 'weights', this.weights)\r\n    writeDefinedProperty(mesh, 'name', this.name)\r\n    writeExtensionsProperty(mesh, this.extensions)\r\n\r\n    return mesh\r\n  }\r\n\r\n  static fromJson(json: IGLTFMesh) {\r\n    const mesh = new GLTFMesh()\r\n    mesh.name = json.name\r\n    mesh.primitives = json.primitives.map(priJson => GLTFPrimitive.fromJson(priJson))\r\n    mesh.weights = json.weights\r\n    mesh.extras = json.extras\r\n    return mesh\r\n  }\r\n}\r\n\r\nexport default GLTFMesh","import { IGLTFTextureInfo } from \"src/interfaces/IGLTFObj\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\n\r\nclass GLTFTextureInfo extends GLTFPropertyBase {\r\n  index: number\r\n  texCoord: number\r\n\r\n  constructor(index: number, texCoord: number) {\r\n    super()\r\n    this.index = index\r\n    this.texCoord = texCoord\r\n  }\r\n\r\n  validate() {\r\n    return (this.index < 0 || this.texCoord < 0)\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFTextureInfo json()] 当前 textureinfo 对象属性不合法，请检查')\r\n    }\r\n\r\n    const tinfo = {\r\n      index: this.index,\r\n      texCoord: this.texCoord\r\n    }\r\n\r\n    return tinfo\r\n  }\r\n\r\n  static fromJson(json: IGLTFTextureInfo) {\r\n    const textureInfo = new GLTFTextureInfo(json.index, json.texCoord)\r\n    textureInfo.extras = json.extras\r\n\r\n    return textureInfo\r\n  }\r\n}\r\n\r\nexport default GLTFTextureInfo","import { IGLTFNormalTextureInfo } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFTextureInfo from \"./gltf-texture-info\"\r\n\r\nclass GLTFNormalTextureInfo \r\nextends GLTFTextureInfo  {\r\n  scale: number\r\n\r\n  constructor(index: number, texCoord: number, scale: number) {\r\n    super(index, texCoord)\r\n    this.scale = scale\r\n  }\r\n\r\n  validate() {\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFNormalTextureInfo json()] 当前 normal textureinfo 属性不合法，请检查')\r\n    }\r\n\r\n    const st = super.json()\r\n    writeDefinedProperty(st, 'scale', this.scale)\r\n    writeExtensionsProperty(st, this.extensions)\r\n    writeDefinedProperty(st, 'extras', this.extras)\r\n\r\n    return st\r\n  }\r\n\r\n  static fromJson(json: IGLTFNormalTextureInfo) {\r\n    const normalTextureInfo = new GLTFNormalTextureInfo(json.index, json.texCoord, json.scale)\r\n    normalTextureInfo.extras = json.extras\r\n    return normalTextureInfo\r\n  }\r\n}\r\n\r\nexport default GLTFNormalTextureInfo","import { IGLTFPbr } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport GLTFTextureInfo from \"./gltf-texture-info\"\r\n\r\nclass GLTFPbr extends GLTFPropertyBase {\r\n  baseColorFactor?: [number, number, number, number] = [1, 1, 1, 1]\r\n  baseColorTexture?: GLTFTextureInfo\r\n  metallicFactor?: number\r\n  roughnessFactor?: number\r\n  metallicRoughnessTexture?: GLTFTextureInfo\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  validate() {\r\n    if (this.baseColorFactor && this.baseColorFactor.every(v => v < 0 || v > 1)) {\r\n      return false\r\n    }\r\n    if (this.roughnessFactor !== undefined) {\r\n      if (this.roughnessFactor > 1 || this.roughnessFactor < 0)\r\n        return false\r\n    }\r\n    if ((this.metallicFactor !== undefined && this.metallicFactor > 1)\r\n      || (this.metallicFactor !== undefined && this.metallicFactor < 0)) {\r\n      return false\r\n    }\r\n    if (this.baseColorTexture?.validate() === false || this.metallicRoughnessTexture?.validate() === false) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    if (this.validate() === false) {\r\n      throw new Error('[GLTFPbr json()] 此 pbr 对象属性有误，请检查')\r\n    }\r\n\r\n    const pbr = {}\r\n\r\n    if (this.baseColorFactor !== undefined && this.baseColorFactor.every(v => v !== 1.0)) {\r\n      writeDefinedProperty(pbr, 'baseColorFactor', this.baseColorFactor)\r\n    }\r\n    writeDefinedProperty(pbr, 'baseColorTexture', this.baseColorTexture !== undefined ? this.baseColorTexture.json() : undefined)\r\n    writeDefinedProperty(pbr, 'metallicFactor', this.metallicFactor && this.metallicFactor === 1 ? undefined : this.metallicFactor)\r\n    writeDefinedProperty(pbr, 'roughnessFactor', this.roughnessFactor && this.roughnessFactor === 1 ? undefined : this.roughnessFactor)\r\n    writeDefinedProperty(pbr, 'metallicRoughnessTexture', this.metallicRoughnessTexture !== undefined ? this.metallicRoughnessTexture.json() : undefined)\r\n    writeExtensionsProperty(pbr, this.extensions)\r\n    writeDefinedProperty(pbr, 'extras', this.extras)\r\n\r\n    return pbr\r\n  }\r\n\r\n  static fromJson(json: IGLTFPbr) {\r\n    const pbr = new GLTFPbr()\r\n\r\n    pbr.extras = json.extras\r\n    pbr.metallicFactor = json.metallicFactor\r\n    pbr.roughnessFactor = json.roughnessFactor\r\n    pbr.baseColorFactor = json.baseColorFactor\r\n    if (json.baseColorTexture !== undefined) {\r\n      pbr.baseColorTexture = GLTFTextureInfo.fromJson(json.baseColorTexture)\r\n    }\r\n    if (json.metallicRoughnessTexture !== undefined) {\r\n      pbr.metallicRoughnessTexture = GLTFTextureInfo.fromJson(json.metallicRoughnessTexture)\r\n    }\r\n\r\n    return pbr\r\n  }\r\n}\r\n\r\nexport default GLTFPbr","import { IGLTFMaterial } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport { GLTFAlphaMode } from \"./enum\"\r\nimport { GLTFAlphaModeValues } from \"./enum/gltf-alphamode\"\r\nimport GLTFNormalTextureInfo from \"./gltf-normal-texture-info\"\r\nimport GLTFOcclusionTextureInfo from \"./gltf-occlusion-texture-info\"\r\nimport GLTFPbr from \"./gltf-pbr\"\r\nimport GLTFTextureInfo from \"./gltf-texture-info\"\r\nimport { GLTFDocument } from \"..\"\r\n\r\nclass GLTFMaterial extends GLTFPropertyBase {\r\n  name?: string\r\n  pbrMetallicRoughness?: GLTFPbr\r\n  normalTexture?: GLTFNormalTextureInfo\r\n  occlusionTexture?: GLTFOcclusionTextureInfo\r\n  emissiveTexture?: GLTFTextureInfo\r\n  emissiveFactor?: [number, number, number] = [0, 0, 0]\r\n  alphaMode?: GLTFAlphaMode = GLTFAlphaMode.OPAQUE\r\n  alphaCutoff?: number = 0.5\r\n  doubleSided?: boolean = false\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  set doc(value: GLTFDocument) {\r\n    this._doc = value\r\n    if (this.pbrMetallicRoughness !== undefined) {\r\n      this.pbrMetallicRoughness.doc = value\r\n    }\r\n    if (this.normalTexture !== undefined) {\r\n      this.normalTexture.doc = value\r\n    }\r\n    if (this.emissiveTexture !== undefined) {\r\n      this.emissiveTexture.doc = value\r\n    }\r\n    if (this.occlusionTexture !== undefined) {\r\n      this.occlusionTexture.doc = value\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    if (this.pbrMetallicRoughness?.validate() === false) {\r\n      return false\r\n    }\r\n    if (this.normalTexture?.validate() === false) {\r\n      return false\r\n    }\r\n    if (this.occlusionTexture?.validate() === false) {\r\n      return false\r\n    }\r\n    if (this.alphaMode === GLTFAlphaMode.MASK && this.alphaCutoff === undefined) {\r\n      return false\r\n    }\r\n    if (this.emissiveFactor?.every(v => v < 0 || v > 1)) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFMaterial json()] 此 material 对象的属性不合法，请检查')\r\n    }\r\n\r\n    const m = {}\r\n\r\n    writeDefinedProperty(m, 'name', this.name)\r\n    writeDefinedProperty(m, 'pbrMetallicRoughness', this.pbrMetallicRoughness !== undefined ? this.pbrMetallicRoughness.json() : undefined)\r\n    writeDefinedProperty(m, 'normalTexture', this.normalTexture !== undefined ? this.normalTexture.json() : undefined)\r\n    writeDefinedProperty(m, 'emissiveTexture', this.emissiveTexture !== undefined ? this.emissiveTexture.json() : undefined)\r\n    writeDefinedProperty(m, 'emissiveFactor', this.emissiveFactor)\r\n    writeDefinedProperty(m, 'alphaMode', this.alphaMode !== undefined && this.alphaMode !== GLTFAlphaMode.OPAQUE ? this.alphaMode : undefined)\r\n    writeDefinedProperty(m, 'alphaCutoff', this.alphaCutoff !== 0.5 && this.alphaCutoff !== undefined ? this.alphaCutoff : undefined)\r\n    writeDefinedProperty(m, 'alphaCutoff', this.doubleSided !== false && this.doubleSided !== undefined ? this.doubleSided : undefined)\r\n    writeExtensionsProperty(m, this.extensions)\r\n    writeDefinedProperty(m, 'extras', this.extras)\r\n    \r\n    return m\r\n  }\r\n\r\n  static fromJson(json: IGLTFMaterial) {\r\n    const mtl = new GLTFMaterial()\r\n    mtl.name = json.name\r\n    if (json.pbrMetallicRoughness !== undefined) {\r\n      mtl.pbrMetallicRoughness = GLTFPbr.fromJson(json.pbrMetallicRoughness)\r\n    }\r\n    if (json.normalTexture !== undefined) {\r\n      mtl.normalTexture = GLTFNormalTextureInfo.fromJson(json.normalTexture)\r\n    }\r\n    if (json.emissiveTexture !== undefined) {\r\n      mtl.emissiveTexture = GLTFTextureInfo.fromJson(json.emissiveTexture)\r\n    }\r\n    if (json.alphaMode !== undefined && GLTFAlphaModeValues.includes(json.alphaMode)) {\r\n      mtl.alphaMode = json.alphaMode as GLTFAlphaMode\r\n    }\r\n    mtl.doubleSided = json.doubleSided\r\n    mtl.emissiveFactor = json.emissiveFactor\r\n    mtl.alphaCutoff = json.alphaCutoff\r\n    mtl.extras = json.extras\r\n    return mtl\r\n  }\r\n}\r\n\r\nexport default GLTFMaterial","import { IGLTFTexture } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\n\r\nclass GLTFTexture extends GLTFPropertyBase {\r\n  sampler?: number\r\n  source?: number\r\n  name?: string\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  validate() {\r\n    if (this.sampler === undefined && this.source === undefined && this.name === undefined)\r\n      return false\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    const tx = {}\r\n    writeDefinedProperty(tx, 'name', this.name)\r\n    writeDefinedProperty(tx, 'source', this.source)\r\n    writeDefinedProperty(tx, 'sampler', this.sampler)\r\n    writeExtensionsProperty(tx, this.extensions)\r\n    writeDefinedProperty(tx, 'extras', this.extras)\r\n\r\n    return tx\r\n  }\r\n\r\n  static fromJson(json: IGLTFTexture) {\r\n    const tx = new GLTFTexture()\r\n    tx.name = json.name\r\n    tx.source = json.source\r\n    tx.sampler = json.sampler\r\n    tx.extras = json.extras\r\n    return tx\r\n  }\r\n}\r\n\r\nexport default GLTFTexture","/*\n * Copyright 2017 Sam Thorogood. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\n(function(scope) {\n  'use strict';\n\n  // fail early\n  if (scope['TextEncoder'] && scope['TextDecoder']) {\n    return false;\n  }\n\n  /**\n   * @constructor\n   * @param {string=} utfLabel\n   */\n  function FastTextEncoder(utfLabel = 'utf-8') {\n    if (utfLabel !== 'utf-8') {\n      throw new RangeError(\n        `Failed to construct 'TextEncoder': The encoding label provided ('${utfLabel}') is invalid.`,\n      );\n    }\n  }\n\n  Object.defineProperty(FastTextEncoder.prototype, 'encoding', {\n    value: 'utf-8',\n  });\n\n  /**\n   * @param {string} string\n   * @param {{stream: boolean}=} options\n   * @return {!Uint8Array}\n   */\n  FastTextEncoder.prototype.encode = function(\n    string,\n    options = { stream: false },\n  ) {\n    if (options.stream) {\n      throw new Error(`Failed to encode: the 'stream' option is unsupported.`);\n    }\n\n    let pos = 0;\n    const len = string.length;\n    const out = [];\n\n    let at = 0; // output position\n    let tlen = Math.max(32, len + (len >> 1) + 7); // 1.5x size\n    let target = new Uint8Array((tlen >> 3) << 3); // ... but at 8 byte offset\n\n    while (pos < len) {\n      let value = string.charCodeAt(pos++);\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < len) {\n          const extra = string.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n        if (value >= 0xd800 && value <= 0xdbff) {\n          continue; // drop lone surrogate\n        }\n      }\n\n      // expand the buffer if we couldn't write 4 bytes\n      if (at + 4 > target.length) {\n        tlen += 8; // minimum extra\n        tlen *= 1.0 + (pos / string.length) * 2; // take 2x the remaining\n        tlen = (tlen >> 3) << 3; // 8 byte offset\n\n        const update = new Uint8Array(tlen);\n        update.set(target);\n        target = update;\n      }\n\n      if ((value & 0xffffff80) === 0) {\n        // 1-byte\n        target[at++] = value; // ASCII\n        continue;\n      } else if ((value & 0xfffff800) === 0) {\n        // 2-byte\n        target[at++] = ((value >> 6) & 0x1f) | 0xc0;\n      } else if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        target[at++] = ((value >> 12) & 0x0f) | 0xe0;\n        target[at++] = ((value >> 6) & 0x3f) | 0x80;\n      } else if ((value & 0xffe00000) === 0) {\n        // 4-byte\n        target[at++] = ((value >> 18) & 0x07) | 0xf0;\n        target[at++] = ((value >> 12) & 0x3f) | 0x80;\n        target[at++] = ((value >> 6) & 0x3f) | 0x80;\n      } else {\n        // FIXME: do we care\n        continue;\n      }\n\n      target[at++] = (value & 0x3f) | 0x80;\n    }\n\n    return target.slice(0, at);\n  };\n\n  /**\n   * @constructor\n   * @param {string=} utfLabel\n   * @param {{fatal: boolean}=} options\n   */\n  function FastTextDecoder(utfLabel = 'utf-8', options = { fatal: false }) {\n    if (utfLabel !== 'utf-8') {\n      throw new RangeError(\n        `Failed to construct 'TextDecoder': The encoding label provided ('${utfLabel}') is invalid.`,\n      );\n    }\n    if (options.fatal) {\n      throw new Error(\n        `Failed to construct 'TextDecoder': the 'fatal' option is unsupported.`,\n      );\n    }\n  }\n\n  Object.defineProperty(FastTextDecoder.prototype, 'encoding', {\n    value: 'utf-8',\n  });\n\n  Object.defineProperty(FastTextDecoder.prototype, 'fatal', { value: false });\n\n  Object.defineProperty(FastTextDecoder.prototype, 'ignoreBOM', {\n    value: false,\n  });\n\n  /**\n   * @param {(!ArrayBuffer|!ArrayBufferView)} buffer\n   * @param {{stream: boolean}=} options\n   */\n  FastTextDecoder.prototype.decode = function(\n    buffer,\n    options = { stream: false },\n  ) {\n    if (options['stream']) {\n      throw new Error(`Failed to decode: the 'stream' option is unsupported.`);\n    }\n\n    const bytes = new Uint8Array(buffer);\n    let pos = 0;\n    const len = bytes.length;\n    const out = [];\n\n    while (pos < len) {\n      const byte1 = bytes[pos++];\n      if (byte1 === 0) {\n        break; // NULL\n      }\n\n      if ((byte1 & 0x80) === 0) {\n        // 1-byte\n        out.push(byte1);\n      } else if ((byte1 & 0xe0) === 0xc0) {\n        // 2-byte\n        const byte2 = bytes[pos++] & 0x3f;\n        out.push(((byte1 & 0x1f) << 6) | byte2);\n      } else if ((byte1 & 0xf0) === 0xe0) {\n        const byte2 = bytes[pos++] & 0x3f;\n        const byte3 = bytes[pos++] & 0x3f;\n        out.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n      } else if ((byte1 & 0xf8) === 0xf0) {\n        const byte2 = bytes[pos++] & 0x3f;\n        const byte3 = bytes[pos++] & 0x3f;\n        const byte4 = bytes[pos++] & 0x3f;\n\n        // this can be > 0xffff, so possibly generate surrogates\n        let codepoint =\n          ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n        if (codepoint > 0xffff) {\n          // codepoint &= ~0x10000;\n          codepoint -= 0x10000;\n          out.push(((codepoint >>> 10) & 0x3ff) | 0xd800);\n          codepoint = 0xdc00 | (codepoint & 0x3ff);\n        }\n        out.push(codepoint);\n      } else {\n        // FIXME: we're ignoring this\n      }\n    }\n\n    return String.fromCharCode.apply(null, out);\n  };\n\n  scope['TextEncoder'] = FastTextEncoder;\n  scope['TextDecoder'] = FastTextDecoder;\n})(\n  typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n    ? self\n    : this,\n);\n","// eslint-disable-next-line import/no-unassigned-import\nimport './text-encoding-polyfill';\n\nconst decoder = new TextDecoder('utf-8');\n\nexport function decode(bytes: Uint8Array): string {\n  return decoder.decode(bytes);\n}\n\nconst encoder = new TextEncoder();\n\nexport function encode(str: string): Uint8Array {\n  return encoder.encode(str);\n}\n","import { decode, encode } from './utf8';\n\nconst defaultByteLength = 1024 * 8;\n\ntype InputData = number | ArrayBufferLike | ArrayBufferView | IOBuffer | Buffer;\n\ninterface IOBufferOptions {\n  /**\n   * Ignore the first n bytes of the ArrayBuffer.\n   */\n  offset?: number;\n}\n\nexport class IOBuffer {\n  /**\n   * Reference to the internal ArrayBuffer object.\n   */\n  public buffer: ArrayBufferLike;\n\n  /**\n   * Byte length of the internal ArrayBuffer.\n   */\n  public byteLength: number;\n\n  /**\n   * Byte offset of the internal ArrayBuffer.\n   */\n  public byteOffset: number;\n\n  /**\n   * Byte length of the internal ArrayBuffer.\n   */\n  public length: number;\n\n  /**\n   * The current offset of the buffer's pointer.\n   */\n  public offset: number;\n\n  private lastWrittenByte: number;\n  private littleEndian: boolean;\n\n  private _data: DataView;\n  private _mark: number;\n  private _marks: number[];\n\n  /**\n   * @param data - The data to construct the IOBuffer with.\n   * If data is a number, it will be the new buffer's length<br>\n   * If data is `undefined`, the buffer will be initialized with a default length of 8Kb<br>\n   * If data is an ArrayBuffer, SharedArrayBuffer, an ArrayBufferView (Typed Array), an IOBuffer instance,\n   * or a Node.js Buffer, a view will be created over the underlying ArrayBuffer.\n   * @param options\n   */\n  public constructor(\n    data: InputData = defaultByteLength,\n    options: IOBufferOptions = {},\n  ) {\n    let dataIsGiven = false;\n    if (typeof data === 'number') {\n      data = new ArrayBuffer(data);\n    } else {\n      dataIsGiven = true;\n      this.lastWrittenByte = data.byteLength;\n    }\n\n    const offset = options.offset ? options.offset >>> 0 : 0;\n    const byteLength = data.byteLength - offset;\n    let dvOffset = offset;\n    if (ArrayBuffer.isView(data) || data instanceof IOBuffer) {\n      if (data.byteLength !== data.buffer.byteLength) {\n        dvOffset = data.byteOffset + offset;\n      }\n      data = data.buffer;\n    }\n    if (dataIsGiven) {\n      this.lastWrittenByte = byteLength;\n    } else {\n      this.lastWrittenByte = 0;\n    }\n    this.buffer = data;\n    this.length = byteLength;\n    this.byteLength = byteLength;\n    this.byteOffset = dvOffset;\n    this.offset = 0;\n    this.littleEndian = true;\n    this._data = new DataView(this.buffer, dvOffset, byteLength);\n    this._mark = 0;\n    this._marks = [];\n  }\n\n  /**\n   * Checks if the memory allocated to the buffer is sufficient to store more\n   * bytes after the offset.\n   * @param byteLength - The needed memory in bytes.\n   * @returns `true` if there is sufficient space and `false` otherwise.\n   */\n  public available(byteLength = 1): boolean {\n    return this.offset + byteLength <= this.length;\n  }\n\n  /**\n   * Check if little-endian mode is used for reading and writing multi-byte\n   * values.\n   * @returns `true` if little-endian mode is used, `false` otherwise.\n   */\n  public isLittleEndian(): boolean {\n    return this.littleEndian;\n  }\n\n  /**\n   * Set little-endian mode for reading and writing multi-byte values.\n   */\n  public setLittleEndian(): this {\n    this.littleEndian = true;\n    return this;\n  }\n\n  /**\n   * Check if big-endian mode is used for reading and writing multi-byte values.\n   * @returns `true` if big-endian mode is used, `false` otherwise.\n   */\n  public isBigEndian(): boolean {\n    return !this.littleEndian;\n  }\n\n  /**\n   * Switches to big-endian mode for reading and writing multi-byte values.\n   */\n  public setBigEndian(): this {\n    this.littleEndian = false;\n    return this;\n  }\n\n  /**\n   * Move the pointer n bytes forward.\n   * @param n - Number of bytes to skip.\n   */\n  public skip(n = 1): this {\n    this.offset += n;\n    return this;\n  }\n\n  /**\n   * Move the pointer to the given offset.\n   * @param offset\n   */\n  public seek(offset: number): this {\n    this.offset = offset;\n    return this;\n  }\n\n  /**\n   * Store the current pointer offset.\n   * @see {@link IOBuffer#reset}\n   */\n  public mark(): this {\n    this._mark = this.offset;\n    return this;\n  }\n\n  /**\n   * Move the pointer back to the last pointer offset set by mark.\n   * @see {@link IOBuffer#mark}\n   */\n  public reset(): this {\n    this.offset = this._mark;\n    return this;\n  }\n\n  /**\n   * Push the current pointer offset to the mark stack.\n   * @see {@link IOBuffer#popMark}\n   */\n  public pushMark(): this {\n    this._marks.push(this.offset);\n    return this;\n  }\n\n  /**\n   * Pop the last pointer offset from the mark stack, and set the current\n   * pointer offset to the popped value.\n   * @see {@link IOBuffer#pushMark}\n   */\n  public popMark(): this {\n    const offset = this._marks.pop();\n    if (offset === undefined) {\n      throw new Error('Mark stack empty');\n    }\n    this.seek(offset);\n    return this;\n  }\n\n  /**\n   * Move the pointer offset back to 0.\n   */\n  public rewind(): this {\n    this.offset = 0;\n    return this;\n  }\n\n  /**\n   * Make sure the buffer has sufficient memory to write a given byteLength at\n   * the current pointer offset.\n   * If the buffer's memory is insufficient, this method will create a new\n   * buffer (a copy) with a length that is twice (byteLength + current offset).\n   * @param byteLength\n   */\n  public ensureAvailable(byteLength = 1): this {\n    if (!this.available(byteLength)) {\n      const lengthNeeded = this.offset + byteLength;\n      const newLength = lengthNeeded * 2;\n      const newArray = new Uint8Array(newLength);\n      newArray.set(new Uint8Array(this.buffer));\n      this.buffer = newArray.buffer;\n      this.length = this.byteLength = newLength;\n      this._data = new DataView(this.buffer);\n    }\n    return this;\n  }\n\n  /**\n   * Read a byte and return false if the byte's value is 0, or true otherwise.\n   * Moves pointer forward by one byte.\n   */\n  public readBoolean(): boolean {\n    return this.readUint8() !== 0;\n  }\n\n  /**\n   * Read a signed 8-bit integer and move pointer forward by 1 byte.\n   */\n  public readInt8(): number {\n    return this._data.getInt8(this.offset++);\n  }\n\n  /**\n   * Read an unsigned 8-bit integer and move pointer forward by 1 byte.\n   */\n  public readUint8(): number {\n    return this._data.getUint8(this.offset++);\n  }\n\n  /**\n   * Alias for {@link IOBuffer#readUint8}.\n   */\n  public readByte(): number {\n    return this.readUint8();\n  }\n\n  /**\n   * Read `n` bytes and move pointer forward by `n` bytes.\n   */\n  public readBytes(n = 1): Uint8Array {\n    const bytes = new Uint8Array(n);\n    for (let i = 0; i < n; i++) {\n      bytes[i] = this.readByte();\n    }\n    return bytes;\n  }\n\n  /**\n   * Read a 16-bit signed integer and move pointer forward by 2 bytes.\n   */\n  public readInt16(): number {\n    const value = this._data.getInt16(this.offset, this.littleEndian);\n    this.offset += 2;\n    return value;\n  }\n\n  /**\n   * Read a 16-bit unsigned integer and move pointer forward by 2 bytes.\n   */\n  public readUint16(): number {\n    const value = this._data.getUint16(this.offset, this.littleEndian);\n    this.offset += 2;\n    return value;\n  }\n\n  /**\n   * Read a 32-bit signed integer and move pointer forward by 4 bytes.\n   */\n  public readInt32(): number {\n    const value = this._data.getInt32(this.offset, this.littleEndian);\n    this.offset += 4;\n    return value;\n  }\n\n  /**\n   * Read a 32-bit unsigned integer and move pointer forward by 4 bytes.\n   */\n  public readUint32(): number {\n    const value = this._data.getUint32(this.offset, this.littleEndian);\n    this.offset += 4;\n    return value;\n  }\n\n  /**\n   * Read a 32-bit floating number and move pointer forward by 4 bytes.\n   */\n  public readFloat32(): number {\n    const value = this._data.getFloat32(this.offset, this.littleEndian);\n    this.offset += 4;\n    return value;\n  }\n\n  /**\n   * Read a 64-bit floating number and move pointer forward by 8 bytes.\n   */\n  public readFloat64(): number {\n    const value = this._data.getFloat64(this.offset, this.littleEndian);\n    this.offset += 8;\n    return value;\n  }\n\n  /**\n   * Read a 1-byte ASCII character and move pointer forward by 1 byte.\n   */\n  public readChar(): string {\n    return String.fromCharCode(this.readInt8());\n  }\n\n  /**\n   * Read `n` 1-byte ASCII characters and move pointer forward by `n` bytes.\n   */\n  public readChars(n = 1): string {\n    let result = '';\n    for (let i = 0; i < n; i++) {\n      result += this.readChar();\n    }\n    return result;\n  }\n\n  /**\n   * Read the next `n` bytes, return a UTF-8 decoded string and move pointer\n   * forward by `n` bytes.\n   */\n  public readUtf8(n = 1): string {\n    return decode(this.readBytes(n));\n  }\n\n  /**\n   * Write 0xff if the passed value is truthy, 0x00 otherwise and move pointer\n   * forward by 1 byte.\n   */\n  public writeBoolean(value: unknown): this {\n    this.writeUint8(value ? 0xff : 0x00);\n    return this;\n  }\n\n  /**\n   * Write `value` as an 8-bit signed integer and move pointer forward by 1 byte.\n   */\n  public writeInt8(value: number): this {\n    this.ensureAvailable(1);\n    this._data.setInt8(this.offset++, value);\n    this._updateLastWrittenByte();\n    return this;\n  }\n\n  /**\n   * Write `value` as an 8-bit unsigned integer and move pointer forward by 1\n   * byte.\n   */\n  public writeUint8(value: number): this {\n    this.ensureAvailable(1);\n    this._data.setUint8(this.offset++, value);\n    this._updateLastWrittenByte();\n    return this;\n  }\n\n  /**\n   * An alias for {@link IOBuffer#writeUint8}.\n   */\n  public writeByte(value: number): this {\n    return this.writeUint8(value);\n  }\n\n  /**\n   * Write all elements of `bytes` as uint8 values and move pointer forward by\n   * `bytes.length` bytes.\n   */\n  public writeBytes(bytes: ArrayLike<number>): this {\n    this.ensureAvailable(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n      this._data.setUint8(this.offset++, bytes[i]);\n    }\n    this._updateLastWrittenByte();\n    return this;\n  }\n\n  /**\n   * Write `value` as a 16-bit signed integer and move pointer forward by 2\n   * bytes.\n   */\n  public writeInt16(value: number): this {\n    this.ensureAvailable(2);\n    this._data.setInt16(this.offset, value, this.littleEndian);\n    this.offset += 2;\n    this._updateLastWrittenByte();\n    return this;\n  }\n\n  /**\n   * Write `value` as a 16-bit unsigned integer and move pointer forward by 2\n   * bytes.\n   */\n  public writeUint16(value: number): this {\n    this.ensureAvailable(2);\n    this._data.setUint16(this.offset, value, this.littleEndian);\n    this.offset += 2;\n    this._updateLastWrittenByte();\n    return this;\n  }\n\n  /**\n   * Write `value` as a 32-bit signed integer and move pointer forward by 4\n   * bytes.\n   */\n  public writeInt32(value: number): this {\n    this.ensureAvailable(4);\n    this._data.setInt32(this.offset, value, this.littleEndian);\n    this.offset += 4;\n    this._updateLastWrittenByte();\n    return this;\n  }\n\n  /**\n   * Write `value` as a 32-bit unsigned integer and move pointer forward by 4\n   * bytes.\n   */\n  public writeUint32(value: number): this {\n    this.ensureAvailable(4);\n    this._data.setUint32(this.offset, value, this.littleEndian);\n    this.offset += 4;\n    this._updateLastWrittenByte();\n    return this;\n  }\n\n  /**\n   * Write `value` as a 32-bit floating number and move pointer forward by 4\n   * bytes.\n   */\n  public writeFloat32(value: number): this {\n    this.ensureAvailable(4);\n    this._data.setFloat32(this.offset, value, this.littleEndian);\n    this.offset += 4;\n    this._updateLastWrittenByte();\n    return this;\n  }\n\n  /**\n   * Write `value` as a 64-bit floating number and move pointer forward by 8\n   * bytes.\n   */\n  public writeFloat64(value: number): this {\n    this.ensureAvailable(8);\n    this._data.setFloat64(this.offset, value, this.littleEndian);\n    this.offset += 8;\n    this._updateLastWrittenByte();\n    return this;\n  }\n\n  /**\n   * Write the charCode of `str`'s first character as an 8-bit unsigned integer\n   * and move pointer forward by 1 byte.\n   */\n  public writeChar(str: string): this {\n    return this.writeUint8(str.charCodeAt(0));\n  }\n\n  /**\n   * Write the charCodes of all `str`'s characters as 8-bit unsigned integers\n   * and move pointer forward by `str.length` bytes.\n   */\n  public writeChars(str: string): this {\n    for (let i = 0; i < str.length; i++) {\n      this.writeUint8(str.charCodeAt(i));\n    }\n    return this;\n  }\n\n  /**\n   * UTF-8 encode and write `str` to the current pointer offset and move pointer\n   * forward according to the encoded length.\n   */\n  public writeUtf8(str: string): this {\n    return this.writeBytes(encode(str));\n  }\n\n  /**\n   * Export a Uint8Array view of the internal buffer.\n   * The view starts at the byte offset and its length\n   * is calculated to stop at the last written byte or the original length.\n   */\n  public toArray(): Uint8Array {\n    return new Uint8Array(this.buffer, this.byteOffset, this.lastWrittenByte);\n  }\n\n  /**\n   * Update the last written byte offset\n   * @private\n   */\n  private _updateLastWrittenByte(): void {\n    if (this.offset > this.lastWrittenByte) {\n      this.lastWrittenByte = this.offset;\n    }\n  }\n}\n","import { decode } from 'base64-arraybuffer'\r\nimport { IGLTFImage } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport MIME from \"./enum/mime\"\r\nimport { IOBuffer } from 'iobuffer'\r\n\r\nclass GLTFImage extends GLTFPropertyBase {\r\n  uri?: string\r\n  bufferView?: number\r\n  mimeType?: MIME\r\n  name?: string\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  get isEncodeWithUri() {\r\n    return this.uri === undefined && this.bufferView !== undefined\r\n  }\r\n  \r\n  get getImageData() {\r\n    if (this.validate() === false) {\r\n      throw new Error('[GLTFImage getImageData()] 当前 image 对象属性有问题，请检查')\r\n    }\r\n    if (this.uri && this.isEncodeWithUri) {\r\n      return decode(this.uri)\r\n    }\r\n\r\n    if (this.doc === undefined) {\r\n      throw new Error('')\r\n    } else {\r\n      if (this.doc.buffers.length === 0 || this.doc.bufferViews.length === 0) {\r\n        throw new Error('')\r\n      } else {        \r\n        const bv = this.doc.bufferViews[this.bufferView!]\r\n        const bf = this.doc.buffers[bv.buffer]\r\n        // 有的时候 byteOffset 并不会指明，那么 bufferView 的 buffer 索引即它自己的索引\r\n        const begin = bv.byteOffset === undefined ? this.doc.bufferViews.indexOf(bv) : bv.byteOffset\r\n        const length = bv.byteLength\r\n        const bufferdata = bf.bufferData\r\n        if (bufferdata !== undefined) {\r\n          return new IOBuffer(bufferdata)\r\n          .skip(begin)\r\n          .readBytes(length)\r\n          .buffer\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    if (this.uri !== undefined && this.bufferView !== undefined) {\r\n      return false\r\n    }\r\n    if (this.bufferView !== undefined) {\r\n      if (this.mimeType === undefined) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    const img = {}\r\n    writeDefinedProperty(img, 'name', this.name)\r\n    writeDefinedProperty(img, 'bufferView', this.bufferView)\r\n    writeDefinedProperty(img, 'uri', this.uri)\r\n    writeDefinedProperty(img, 'mimeType', this.mimeType)\r\n    writeExtensionsProperty(img, this.extensions)\r\n    writeDefinedProperty(img, 'extras', this.extras)\r\n\r\n    return img\r\n  }\r\n\r\n  static fromJson(json: IGLTFImage) {\r\n    const img = new GLTFImage()\r\n    img.name = json.name\r\n    img.bufferView = json.bufferView\r\n    if (json.mimeType !== undefined) {\r\n      if (json.mimeType in MIME) {\r\n        img.mimeType = json.mimeType as MIME\r\n      } else {\r\n        throw new Error('[GLTFImage.readFromJson()] 不支持的 mime 类型')\r\n      }\r\n    }\r\n    img.extras = json.extras\r\n    return img\r\n  }\r\n}\r\n\r\nexport default GLTFImage","import { IGLTFSampler } from 'src/interfaces/IGLTFObj'\r\nimport writeDefinedProperty from 'src/utils/io/writeDefinedProperty'\r\nimport writeExtensionsProperty from 'src/utils/io/writeExtensionsProperty'\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport GLTFFilter, { GLTFFilterValues } from './enum/gltf-filter'\r\nimport GLTFWrapMode, { GLTFWrapModeValues } from './enum/gltf-wrapmode'\r\n\r\nclass GLTFSampler extends GLTFPropertyBase {\r\n  magFilter?: GLTFFilter\r\n  minFilter?: GLTFFilter\r\n  wrapS?: GLTFWrapMode\r\n  wrapT?: GLTFWrapMode\r\n  name?: string\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  validate() {\r\n    // 注意默认值检查\r\n    if (this.magFilter === undefined && this.minFilter === undefined && this.wrapS === undefined && this.wrapT === undefined)\r\n      return false\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFSampler json()] 当前 sampler 对象的属性不合法，请检查')\r\n    }\r\n\r\n    const spl = {}\r\n    writeDefinedProperty(spl, 'magFilter', this.magFilter)\r\n    writeDefinedProperty(spl, 'minFilter', this.minFilter)\r\n    writeDefinedProperty(spl, 'wrapS', this.wrapS)\r\n    writeDefinedProperty(spl, 'wrapT', this.wrapT)\r\n    writeDefinedProperty(spl, 'name', this.name)\r\n    writeExtensionsProperty(spl, this.extensions)\r\n    writeDefinedProperty(spl, 'extras', this.extras)\r\n\r\n    return spl\r\n  }\r\n\r\n  static fromJson(json: IGLTFSampler) {\r\n    const spl = new GLTFSampler()\r\n    spl.name = json.name\r\n    if (json.magFilter !== undefined && GLTFFilterValues.includes(json.magFilter)) {\r\n      spl.magFilter = json.magFilter as GLTFFilter\r\n    }\r\n    if (json.minFilter !== undefined && GLTFFilterValues.includes(json.minFilter)) {\r\n      spl.minFilter = json.minFilter as GLTFFilter\r\n    }\r\n    if (json.wrapS !== undefined && GLTFWrapModeValues.includes(json.wrapS)) {\r\n      spl.wrapS = json.wrapS as GLTFWrapMode\r\n    }\r\n    if (json.wrapT !== undefined && GLTFWrapModeValues.includes(json.wrapT)) {\r\n      spl.wrapT = json.wrapT as GLTFWrapMode\r\n    }\r\n    spl.extras = json.extras\r\n\r\n    return spl\r\n  }\r\n}\r\n\r\nexport default GLTFSampler","enum GLTFAnimationChannelTargetPath {\r\n  TRANSLATION = \"translation\",\r\n  ROTATION = \"rotation\",\r\n  SCALE = \"scale\",\r\n  WEIGHTS = \"weights\"\r\n}\r\n\r\nexport const GLTFAnimationChannelTargetPathValues = Object.freeze(Object.values(GLTFAnimationChannelTargetPath) as Array<string>)\r\n\r\nexport default GLTFAnimationChannelTargetPath","import { IGLTFAnimationChannelTarget } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport GLTFAnimationChannelTargetPath, { GLTFAnimationChannelTargetPathValues } from \"./enum/gltf-animation-channel-target-path\"\r\n\r\nclass GLTFAnimationChannelTarget extends GLTFPropertyBase {\r\n  path: GLTFAnimationChannelTargetPath\r\n  node?: number\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  validate() {\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    const act = {\r\n      path: this.path,\r\n    }\r\n\r\n    writeDefinedProperty(act, 'node', this.node)\r\n    writeExtensionsProperty(act, this.extensions)\r\n    writeDefinedProperty(act, 'extras', this.extras)\r\n\r\n    return act\r\n  }\r\n\r\n  static readFromJson(json: IGLTFAnimationChannelTarget) {\r\n    const channelTarget = new GLTFAnimationChannelTarget()\r\n    channelTarget.extras = json.extras\r\n    channelTarget.node = json.node\r\n    if (json.path !== undefined && GLTFAnimationChannelTargetPathValues.includes(json.path)) {\r\n      channelTarget.path = json.path as GLTFAnimationChannelTargetPath\r\n    }\r\n\r\n    return channelTarget\r\n  }\r\n}\r\n\r\nexport default GLTFAnimationChannelTarget","import { IGLTFAnimationChannel } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport GLTFAnimationChannelTarget from \"./gltf-animation-channel-target\"\r\n\r\nclass GLTFAnimationChannel extends GLTFPropertyBase {\r\n  sampler: number\r\n  target: GLTFAnimationChannelTarget\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  validate() {\r\n    return this.target.validate()\r\n  } \r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFAnimationChannel json()] 当前 animation channel 对象的属性不合法，请检查')\r\n    }\r\n\r\n    const ac = {\r\n      sampler: this.sampler,\r\n      target: this.target.json(),\r\n    }\r\n\r\n    writeExtensionsProperty(ac, this.extensions)\r\n    writeDefinedProperty(ac, 'extras', this.extras)\r\n\r\n    return ac\r\n  }\r\n\r\n  static readFromJson(json: IGLTFAnimationChannel) {\r\n    const channel = new GLTFAnimationChannel()\r\n    channel.sampler = json.sampler\r\n    channel.target = GLTFAnimationChannelTarget.readFromJson(json.target)\r\n    channel.extras = json.extras\r\n    \r\n    return channel\r\n  }\r\n}\r\n\r\nexport default GLTFAnimationChannel","enum GLTFAnimationInterpolation {\r\n  LINEAR = \"LINEAR\",\r\n  STEP = \"STEP\",\r\n  CUBICSPLINE = \"CUBICSPLINE\",\r\n}\r\n\r\nexport const GLTFAnimationInterpolationValues = Object.freeze(Object.values(GLTFAnimationInterpolation) as Array<string>)\r\n\r\nexport default GLTFAnimationInterpolation","import { IGLTFAnimationSampler } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport GLTFAnimationInterpolation, { GLTFAnimationInterpolationValues } from \"./enum/gltf-animation-interpolation\"\r\n\r\n\r\nclass GLTFAnimationSampler extends GLTFPropertyBase {\r\n  input: number\r\n  interpolation?: GLTFAnimationInterpolation\r\n  output: number\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  validate() {\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    const as = {\r\n      input: this.input,\r\n      output: this.output\r\n    }\r\n\r\n    writeDefinedProperty(as, 'interpolation', this.interpolation)\r\n\r\n    return as\r\n  }\r\n\r\n  static readFromJson(json: IGLTFAnimationSampler) {\r\n    const as = new GLTFAnimationSampler()\r\n    as.input = json.input\r\n    as.output = json.output\r\n    if (json.interpolation !== undefined && GLTFAnimationInterpolationValues.includes(json.interpolation)) {\r\n      as.interpolation = json.interpolation as GLTFAnimationInterpolation\r\n    }\r\n    return as\r\n  }\r\n}\r\n\r\nexport default GLTFAnimationSampler","import { IGLTFAnimation } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport GLTFAnimationChannel from \"./gltf-animation-channel\"\r\nimport GLTFAnimationSampler from \"./gltf-animation-sampler\"\r\n\r\nclass GLTFAnimation extends GLTFPropertyBase {\r\n  channels: GLTFAnimationChannel[] = []\r\n  samplers: GLTFAnimationSampler[] = []\r\n  name?: string\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  validate() {\r\n    if (this.channels!.length < 1 || this.samplers!.length < 1) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFAnimation json()] 当前 animation 对象属性不合法，请检查')\r\n    }\r\n\r\n    const ani = {}\r\n\r\n    writeDefinedProperty(ani, 'name', this.name)\r\n    writeDefinedProperty(ani, 'channels', this.channels.length !== 0 ? this.channels.map(c => c.json()) : undefined)\r\n    writeDefinedProperty(ani, 'samplers', this.samplers.length !== 0 ? this.samplers.map(s => s.json()) : undefined)\r\n    writeExtensionsProperty(ani, this.extensions)\r\n    writeDefinedProperty(ani, 'extras', this.extras)\r\n\r\n    return ani\r\n  }\r\n\r\n  static fromJson(json: IGLTFAnimation) {\r\n    const ani = new GLTFAnimation()\r\n    ani.name = json.name\r\n    ani.channels = json.channels.map(channel => GLTFAnimationChannel.readFromJson(channel))\r\n    ani.samplers = json.samplers.map(spl => GLTFAnimationSampler.readFromJson(spl))\r\n    ani.extras = json.extras\r\n\r\n    return ani\r\n  }\r\n}\r\n\r\nexport default GLTFAnimation","enum GLTFCameraType {\r\n  PERSPECTIVE = \"perspective\",\r\n  ORTHOGRAPHIC = \"orthographic\"\r\n}\r\n\r\nexport const GLTFCameraTypeValues = Object.freeze(Object.values(GLTFCameraType) as Array<string>)\r\n\r\nexport default GLTFCameraType","import { ISerializable, IValidate } from \"src/interfaces\"\r\n\r\nclass GLTFOrthographicCamera implements IValidate, ISerializable {\r\n  xmag: number\r\n  ymag: number\r\n  zfar: number\r\n  znear: number\r\n\r\n  validate() {\r\n    return this.znear >= 0 && this.zfar >= 0 && this.xmag !== 0 && this.ymag !== 0 && this.zfar > this.znear\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFOrthographicCamera json()] 当前 orthographic camera 对象属性不合法，请检查')\r\n    }\r\n\r\n    const c = {\r\n      xmag: this.xmag,\r\n      ymag: this.ymag,\r\n      zfar: this.zfar,\r\n      znear: this.znear,\r\n    }\r\n\r\n    return c\r\n  }\r\n}\r\n\r\nexport default GLTFOrthographicCamera","import { ISerializable, IValidate } from \"src/interfaces\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\n\r\nclass GLTFPerspectiveCamera implements IValidate, ISerializable {\r\n  yfov: number\r\n  znear: number\r\n  zfar?: number\r\n  aspectRatio?: number\r\n\r\n  validate() {\r\n    let flag = this.yfov >= 0 && this.znear >= 0\r\n\r\n    this.aspectRatio !== undefined ? flag = flag && this.aspectRatio >= 0 : flag\r\n    this.zfar !== undefined ? flag = flag && this.zfar >= 0 : flag\r\n    this.zfar !== undefined ? flag = flag && this.zfar > this.znear : flag\r\n\r\n    return flag\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFPerspectiveCamera json()] 当前对象属性有问题，请检查')\r\n    }\r\n\r\n    const c = {\r\n      yfov: this.yfov,\r\n      znear: this.znear\r\n    }\r\n\r\n    writeDefinedProperty(c, 'aspectRatio', this.aspectRatio)\r\n    writeDefinedProperty(c, 'zfar', this.zfar)\r\n\r\n    return c\r\n  }\r\n}\r\n\r\nexport default GLTFPerspectiveCamera","import { IGLTFCamera } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\nimport GLTFCameraType, { GLTFCameraTypeValues } from \"./enum/gltf-cameratype\"\r\nimport GLTFOrthographicCamera from \"./gltf-orthographic-camera\"\r\nimport GLTFPerspectiveCamera from \"./gltf-perspective-camera\"\r\n\r\nclass GLTFCamera extends GLTFPropertyBase {\r\n  orthographic?: GLTFOrthographicCamera\r\n  perspective?: GLTFPerspectiveCamera\r\n  type: GLTFCameraType\r\n  name?: string\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  validate() {\r\n    if (this.orthographic !== undefined && this.perspective !== undefined) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFCamera json()] 当前 camera 对象属性不合法，请检查')\r\n    }\r\n\r\n    const camera = {\r\n      type: this.type\r\n    }\r\n\r\n    writeDefinedProperty(camera, 'name', this.name)\r\n    writeDefinedProperty(camera, 'perspective', this.perspective ? this.perspective.json() : undefined)\r\n    writeDefinedProperty(camera, 'orthographic', this.orthographic ? this.orthographic.json() : undefined)\r\n    writeExtensionsProperty(camera, this.extensions)\r\n    writeDefinedProperty(camera, 'extras', this.extras)\r\n\r\n    return camera\r\n  }\r\n\r\n  static fromJson(json: IGLTFCamera) {\r\n    const camera = new GLTFCamera()\r\n    camera.name = json.name\r\n    if (GLTFCameraTypeValues.includes(json.type)) {\r\n      camera.type = json.type as GLTFCameraType\r\n    }\r\n    let hasCamera = false\r\n    if (json.perspective !== undefined) {\r\n      camera.perspective = new GLTFPerspectiveCamera()\r\n      camera.perspective.yfov = json.perspective.yfov\r\n      camera.perspective.znear = json.perspective.znear\r\n      camera.perspective.aspectRatio = json.perspective.aspectRatio\r\n      camera.perspective.zfar = json.perspective.zfar\r\n      hasCamera = true\r\n    }\r\n    if (json.orthographic !== undefined) {\r\n      if (hasCamera) {\r\n        throw new Error('[GLTFCamera.readFromJson()] 已经有一个 perspective 相机了')\r\n      }\r\n      camera.orthographic = new GLTFOrthographicCamera()\r\n      camera.orthographic.xmag = json.orthographic.xmag\r\n      camera.orthographic.ymag = json.orthographic.ymag\r\n      camera.orthographic.zfar = json.orthographic.zfar\r\n      camera.orthographic.znear = json.orthographic.znear\r\n    }\r\n    camera.extras = json.extras\r\n\r\n    return camera\r\n  }\r\n}\r\n\r\nexport default GLTFCamera","import { IGLTFSkin } from \"src/interfaces/IGLTFObj\"\r\nimport writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFPropertyBase from \"./gltf-property-base\"\r\n\r\nclass GLTFSkin extends GLTFPropertyBase {\r\n  inverseBindMatrices?: number\r\n  skeleton?: number\r\n  name?: string\r\n  joints: number[]\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  validate() {\r\n    return this.joints.length > 1\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFSkin json()] 当前 skin 属性不合法，请检查')\r\n    }\r\n\r\n    const sk = {}\r\n\r\n    writeDefinedProperty(sk, 'inverseBindMatrices', this.inverseBindMatrices)\r\n    writeDefinedProperty(sk, 'skeleton', this.skeleton)\r\n    writeDefinedProperty(sk, 'name', this.name)\r\n    writeDefinedProperty(sk, 'joints', this.joints.length !== 0 ? this.joints : undefined)\r\n    writeExtensionsProperty(sk, this.extensions)\r\n    writeDefinedProperty(sk, 'extras', this.extras)\r\n\r\n    return sk\r\n  }\r\n\r\n  static fromJson(json: IGLTFSkin) {\r\n    const skin = new GLTFSkin()\r\n    skin.joints = json.joints\r\n    skin.name = json.name\r\n    skin.inverseBindMatrices = json.inverseBindMatrices\r\n    skin.skeleton = json.skeleton\r\n    skin.extras = json.extras\r\n    return skin\r\n  }\r\n}\r\n\r\nexport default GLTFSkin","import writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport writeExtensionsProperty from \"src/utils/io/writeExtensionsProperty\"\r\nimport GLTFTextureInfo from \"./gltf-texture-info\"\r\n\r\nclass GLTFOcclusionTextureInfo \r\nextends GLTFTextureInfo {\r\n  strength: number\r\n\r\n  constructor(index: number, texCoord: number, strength: number) {\r\n    super(index, texCoord)\r\n    this.strength = strength\r\n  }\r\n\r\n  validate() {\r\n    return (this.strength > 1 || this.strength < 0)\r\n  }\r\n\r\n  json() {\r\n    if (!this.validate()) {\r\n      throw new Error('[GLTFOcclusionTextureInfo json()] 当前 occlusion texture info 属性不合法，请检查')\r\n    }\r\n\r\n    const st = super.json()\r\n\r\n    writeDefinedProperty(st, 'strength', this.strength)\r\n    writeExtensionsProperty(st, this.extensions)\r\n    writeDefinedProperty(st, 'extras', this.extras)\r\n\r\n    return st\r\n  }\r\n}\r\n\r\nexport default GLTFOcclusionTextureInfo","import ISerializable from 'src/interfaces/ISerializable'\r\nimport writeDefinedProperty from 'src/utils/io/writeDefinedProperty'\r\nimport writeExtensionsProperty from 'src/utils/io/writeExtensionsProperty'\r\nimport { GLTFExtensionBase } from '../ext'\r\nimport {\r\n  GLTFAsset,\r\n  GLTFBuffer,\r\n  GLTFBufferView,\r\n  GLTFAccessor,\r\n  GLTFScene,\r\n  GLTFNode,\r\n  GLTFMesh,\r\n  GLTFMaterial,\r\n  GLTFImage,\r\n  GLTFTexture,\r\n  GLTFSampler,\r\n  GLTFAnimation,\r\n  GLTFCamera,\r\n  GLTFSkin,\r\n} from './def'\r\n\r\nclass GLTFDocument implements ISerializable {\r\n  asset: GLTFAsset = new GLTFAsset()\r\n  scene?: number = 0\r\n\r\n  buffers: GLTFBuffer[] = []\r\n  bufferViews: GLTFBufferView[] = []\r\n  accessors: GLTFAccessor[] = []\r\n\r\n  scenes: GLTFScene[] = []\r\n  nodes: GLTFNode[] = []\r\n  meshes: GLTFMesh[] = []\r\n\r\n  materials?: GLTFMaterial[]\r\n  textures?: GLTFTexture[]\r\n  images?: GLTFImage[]\r\n  samplers?: GLTFSampler[]\r\n\r\n  animations?: GLTFAnimation[]\r\n  cameras?: GLTFCamera[]\r\n  skins?: GLTFSkin[]\r\n\r\n  extensions?: Set<GLTFExtensionBase>\r\n  extras?: any\r\n  extensionsUsed?: string[]\r\n  extensionsRequired?: string[]\r\n\r\n  json() {\r\n    const gltfObj = {\r\n      asset: this.asset.json(),\r\n      buffers: this.buffers.map(buffer => buffer.json()),\r\n      bufferViews: this.bufferViews.map(bufferView => bufferView.json()),\r\n      accessors: this.accessors.map(acc => acc.json()),\r\n      \r\n      scenes: this.scenes.map(scene => scene.json()),\r\n      nodes: this.nodes.map(node => node.json()),\r\n      meshes: this.meshes.map(mesh => mesh.json()),\r\n    }\r\n    writeDefinedProperty(gltfObj, 'scene', this.scene)\r\n    writeDefinedProperty(gltfObj, 'materials', this.materials !== undefined && this.materials.length !== 0 ? this.materials.map(mt => mt.json()) : undefined)\r\n    writeDefinedProperty(gltfObj, 'textures', this.textures !== undefined && this.textures.length !== 0 ? this.textures.map(tx => tx.json()) : undefined)\r\n    writeDefinedProperty(gltfObj, 'images', this.images !== undefined && this.images.length !== 0 ? this.images.map(img => img.json()) : undefined)\r\n    writeDefinedProperty(gltfObj, 'samplers', this.samplers !== undefined && this.samplers.length !== 0 ? this.samplers.map(spl => spl.json()) : undefined)\r\n    writeDefinedProperty(gltfObj, 'cameras', this.cameras !== undefined && this.cameras.length !== 0 ? this.cameras.map(c => c.json()) : undefined)\r\n    writeDefinedProperty(gltfObj, 'animations', this.animations !== undefined && this.animations.length !== 0 ? this.animations.map(ani => ani.json()) : undefined)\r\n    writeDefinedProperty(gltfObj, 'skins', this.skins !== undefined && this.skins.length !== 0 ? this.skins.map(skin => skin.json()) : undefined)\r\n\r\n    writeExtensionsProperty(gltfObj, this.extensions)\r\n    writeDefinedProperty(gltfObj, 'extras', this.extras)\r\n    writeDefinedProperty(gltfObj, 'extensionsUsed', this.extensionsUsed)\r\n    writeDefinedProperty(gltfObj, 'extensionsRequired', this.extensionsRequired)\r\n    return gltfObj\r\n  }\r\n}\r\n\r\nexport default GLTFDocument","import { ISerializable, IValidate } from \"src/interfaces\"\r\n\r\nclass GLTFExtensionBase implements IValidate, ISerializable {\r\n  protected _name: string = \"\"\r\n  get name() {\r\n    return this._name\r\n  }\r\n  \r\n  required?: boolean\r\n  used?: boolean\r\n\r\n  validate() {\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    return\r\n  }\r\n}\r\n\r\nexport default GLTFExtensionBase","import { GLTFPrimitiveAttribute } from \"../../core\"\r\nimport GLTFExtensionBase from \"../gltf-extension-base\"\r\n\r\nclass ExtDraco extends GLTFExtensionBase {\r\n  _name: string = \"KHR_draco_mesh_compression\"\r\n  bufferView: number\r\n  attributes: GLTFPrimitiveAttribute\r\n  /** 若只提供了 draco 压缩的部分，则必须指明在 required 列表中 */\r\n  required?: boolean\r\n  /** 若 draco 压缩的和原始数据都提供了，则只需指明在 used 列表中 */\r\n  used?: boolean\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  validate() {\r\n    return Number.isInteger(this.bufferView) && this.bufferView > 0\r\n  }\r\n\r\n  json() {\r\n    return {\r\n      bufferView: this.bufferView,\r\n      attributes: this.attributes.json()\r\n    }\r\n  }\r\n}\r\n\r\nexport default ExtDraco","import writeDefinedProperty from \"src/utils/io/writeDefinedProperty\"\r\nimport { GLTFTextureInfo } from \"../../core\"\r\nimport GLTFExtensionBase from \"../gltf-extension-base\"\r\n\r\nclass ExtPbrSpecularGlossiness extends GLTFExtensionBase {\r\n  _name: string = \"KHR_materials_pbrSpecularGlossiness\"\r\n\r\n  diffuseFactor?: number[]\r\n  specularFactor?: number[]\r\n  glossinessFactor?: number\r\n  diffuseTexture?: GLTFTextureInfo\r\n  specularGlossinessTexture?: GLTFTextureInfo\r\n  required?: boolean\r\n  used?: boolean\r\n\r\n  validate() {\r\n    if (this.diffuseTexture !== undefined) {\r\n      return this.diffuseTexture.validate()\r\n    }\r\n    if (this.specularGlossinessTexture !== undefined) {\r\n      this.specularGlossinessTexture.validate()\r\n    }\r\n    if (this.diffuseFactor !== undefined) {\r\n      if (this.diffuseFactor.length !== 4) {\r\n        return false\r\n      }\r\n      if (this.diffuseFactor.every(v => v > 0 && v < 1)) {\r\n        return false\r\n      }\r\n    }\r\n    if (this.specularFactor !== undefined) {\r\n      if (this.specularFactor.length !== 3) {\r\n        return false\r\n      }\r\n      if (this.specularFactor.every(v => v > 1 || v < 0)) {\r\n        return false\r\n      }\r\n    }\r\n    if (this.glossinessFactor !== undefined && (this.glossinessFactor > 1 || this.glossinessFactor < 0)) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  json() {\r\n    if (this.validate() === false) {\r\n      throw new Error('[ExtPbrSpecularGlossiness json()] 当前对象的属性值不合法，请检查')\r\n    }\r\n    const ext = {}\r\n    if (this.diffuseFactor && !this.diffuseFactor.every(v => v === 1)) {\r\n      writeDefinedProperty(ext, 'diffuseFactor', this.diffuseFactor)\r\n    }\r\n    if (this.specularFactor && !this.specularFactor.every(v => v === 1)) {\r\n      writeDefinedProperty(ext, 'diffuseFactor', this.specularFactor)\r\n    }\r\n    if (this.glossinessFactor !== 1.0)\r\n      writeDefinedProperty(ext, 'glossinessFactor', this.glossinessFactor)\r\n    if (this.diffuseTexture !== undefined) {\r\n      writeDefinedProperty(ext, 'diffuseTexture', this.diffuseTexture.json())\r\n    }\r\n    if (this.specularGlossinessTexture !== undefined) {\r\n      writeDefinedProperty(ext, 'specularGlossinessTexture', this.specularGlossinessTexture.json())\r\n    }\r\n    return ext\r\n  }\r\n}\r\n\r\nexport default ExtPbrSpecularGlossiness","import GLTFExtensionBase from \"../gltf-extension-base\"\r\n\r\nclass ExtTextureWebp extends GLTFExtensionBase {\r\n  _name = \"EXT_texture_webp\"\r\n}\r\n\r\nexport default ExtTextureWebp","import GLTFExtensionBase from \"../gltf-extension-base\"\r\n\r\n/**\r\n * @description\r\n * 此扩展允许 gltf texture 使用 dds 格式的贴图\r\n * ``` json\r\n * \"textures\": [\r\n *     {\r\n *         \"source\": 0,\r\n *         \"extensions\": {\r\n *             \"MSFT_texture_dds\": {\r\n *                 \"source\": 1\r\n *             }\r\n *         }\r\n *     }\r\n * ],\r\n * \"images\": [\r\n *     {\r\n *         \"uri\": \"defaultTexture.png\"\r\n *     },\r\n *     {\r\n *         \"uri\": \"DDSTexture.dds\"\r\n *     }\r\n * ]\r\n * ```\r\n * \r\n * 若 source 对象指向的是 bufferView，那么其 mime 需指明为 \"image/vnd-ms.dds\"\r\n * 也就是说，texture 允许超过 1 个贴图\r\n * 此扩展由微软提供\r\n */\r\nclass ExtTextureDDS extends GLTFExtensionBase {\r\n  _name: string = \"MSFT_texture_dds\"\r\n  source: number\r\n}\r\n\r\nexport default ExtTextureDDS","import GLTFExtensionBase from \"../gltf-extension-base\";\r\n\r\n/**\r\n * @description\r\n * 此扩展由 Facebook 提供。它作用于 `GLTFScene` 对象。\r\n * \r\n */\r\nclass ExtGeometryMetadata extends GLTFExtensionBase {\r\n  _name: string = \"FB_geometry_metadata\"\r\n  /**\r\n   * @description 当前 `GLTFScene` 总共的顶点数量（不重复，意味着只统计 primitive，不考虑 node 复用）\r\n   */\r\n  vertexCount: number\r\n  /**\r\n   * @description 当前 `GLTFScene` 总共的图元数量\r\n   */\r\n  primitiveCount: number\r\n  sceneBounds: {\r\n    min: [number, number, number] \r\n    max: [number, number, number] \r\n  }\r\n\r\n}\r\n\r\nexport default ExtGeometryMetadata","import GLTFExtensionBase from \"../gltf-extension-base\"\r\n\r\nclass ExtPrimitiveOutline extends GLTFExtensionBase {\r\n  _name: string = \"CESIUM_primitive_outline\"\r\n}\r\n\r\nexport default ExtPrimitiveOutline","import GLTFExtensionBase from \"../gltf-extension-base\"\r\n\r\n/**\r\n * @description 作用对象：GLTFBufferView 和 GLTFBuffer\r\n */\r\nclass ExtMeshOptCompression extends GLTFExtensionBase {\r\n  _name: string = \"EXT_meshopt_compression\"\r\n  buffer: number\r\n  byteOffset?: number\r\n  byteLength: number // min 1\r\n  byteStride: number // 2 ~ 256\r\n  /**\r\n   * @description \"ATTRIBUTES\", \"TRIANGLES\", \"INDICES\"\r\n   */\r\n  mode: string\r\n  count: number // min 1\r\n  /**\r\n   * @description \"NONE\", \"OCTAHEDRAL\", \"QUATERNION\", \"EXPONENTIAL\"\r\n   */\r\n  filter?: string\r\n}\r\n\r\nexport default ExtMeshOptCompression","import GLTFExtensionBase from \"../gltf-extension-base\"\r\n\r\n/**\r\n * @description\r\n * 此扩展由微软提出，作用于 `GLTFNode` 和 `GLTFMaterial`\r\n * 同时，要在 `GLTFNode` 的 `extras` 中附上 lod 权重数据\r\n * ``` json\r\n * \"nodes\": [\r\n *   {\r\n *     \"name\": \"High_LOD\",\r\n *     \"mesh\": 0,\r\n *     \"extensions\": {\r\n *       \"MSFT_lod\": {\r\n *         \"ids\": [ 1, 2 ]\r\n *       }\r\n *     },\r\n *     \"extras\": {\r\n *         \"MSFT_screencoverage\": [ 0.5, 0.2, 0.01 ]\r\n *     }\r\n *   },\r\n *   {\r\n *     \"name\": \"Medium_LOD\",\r\n *     \"mesh\": 1\r\n *   },\r\n *   {\r\n *     \"name\": \"Low_LOD\",\r\n *     \"mesh\": 2\r\n *   }\r\n * ]\r\n * ```\r\n */\r\nclass ExtLod extends GLTFExtensionBase {\r\n  _name: string = \"MSFT_lod\"\r\n  ids: number[]\r\n  extras: {\r\n    MSFT_screencoverage: number[]\r\n  }\r\n}\r\n\r\nexport default ExtLod","import { GLTFTextureInfo } from \"../../core\";\r\nimport GLTFExtensionBase from \"../gltf-extension-base\";\r\n\r\n/**\r\n * @description 此扩展由 adobe 提出，它解决的是 pbr 透明材质中没有表面反射的问题（玻璃完全透明，但是表面仍然是有反射的）\r\n */\r\nclass ExtMaterialsThinTransparency extends GLTFExtensionBase {\r\n  _name: string = \"ADOBE_materials_thin_transparency\"\r\n\r\n  /**\r\n   * @default 1.0\r\n   */\r\n  transmissionFactor?: number\r\n  /**\r\n   * \r\n   */\r\n  transmissionTexture?: GLTFTextureInfo[]\r\n  /**\r\n   * @description \r\n   * @default 1.33\r\n   */\r\n  ior?: number\r\n}\r\n\r\nexport default ExtMaterialsThinTransparency","import { IOBuffer } from \"iobuffer\"\r\nimport { GLTFAccessor, GLTFBuffer, GLTFDocument, GLTFMaterial, GLTFMesh, GLTFNode } from \"src/gltf/core\"\r\nimport { IGLTFMaterial } from \"src/interfaces\"\r\nimport IGLTFWriteAction from \"src/interfaces/IGLTFAction\"\r\nimport { GLTFVertexAttributes, GLTFVertexIndices } from \"./action-data\"\r\n\r\n/**\r\n * GLTF 创建行为中的 `\"添加动作\"`，添加动作当前代表了一个完整的 GLTFPrimitive 的创建\r\n * 一个 `\"添加动作\"` 包含一个 vao，允许包括相对应的材质、贴图以及 gltf 扩展\r\n */\r\nclass GLTFAddAction implements IGLTFWriteAction {\r\n  readonly type = \"add\"\r\n\r\n  /** vertexArrayData */\r\n  vertexArrayData: GLTFVertexAttributes\r\n  indicesData?: GLTFVertexIndices\r\n  /** \r\n   * @todo\r\n   * 用 IGLTFMaterial 是有问题的，用户不知道索引之类的东西\r\n   */\r\n  material?: IGLTFMaterial\r\n  textureImage?: ArrayBuffer\r\n\r\n  constructor(vao: GLTFVertexAttributes, material?: IGLTFMaterial, textureImage?: ArrayBuffer) {\r\n    this.vertexArrayData = vao\r\n    this.material = material\r\n    this.textureImage = textureImage\r\n  }\r\n\r\n  submit(doc: GLTFDocument) {\r\n    try {\r\n      // 第一步 创建 accessor，更新index  <-------------- 必须创建\r\n      // TODO 针对每一个 VBO 创建自己的 accessor\r\n      const acc = GLTFAccessor.fromJson({\r\n        count: this.vertexArrayData.verticeCount,\r\n        componentType: 5126,\r\n        type: 'vec3'\r\n      })\r\n      doc.accessors.push(acc)\r\n      \r\n      \r\n      // 第二步，创建 bufferView <----------------------- 最好创建新的\r\n\r\n\r\n      // 第三步 创建 primitive -> mesh -> node\r\n      // -- primitive\r\n      const prmt = this.vertexArrayData.asPrimitive(doc)\r\n\r\n\r\n      // -- mesh\r\n      const mesh = new GLTFMesh()\r\n      mesh.primitives.push(prmt)\r\n      mesh.doc = doc\r\n      const meshid = doc.meshes.push(mesh)\r\n      // -- node\r\n      const node = new GLTFNode()\r\n      node.doc = doc\r\n      node.mesh = meshid\r\n      const nodeid = doc.nodes.push(node)\r\n      // -- update scenes.nodes \r\n      doc.scenes[doc.scene === undefined ? 0 : doc.scene].nodes.push(nodeid)\r\n\r\n\r\n      // 可选步 创建材质、纹理、贴图以及其对象\r\n      if (this.material !== undefined) {\r\n        if (doc.materials === undefined) {\r\n          doc.materials = []\r\n        }\r\n        let materialStartIndex = doc.materials.length\r\n        prmt.material = materialStartIndex\r\n        // todo!!\r\n        // material <--- 用 IGLTFMaterial 是有问题的，用户不知道索引之类的东西\r\n        doc.materials.push(GLTFMaterial.fromJson(this.material))\r\n      }\r\n      // todo\r\n      if (this.textureImage !== undefined) {\r\n        // image，即 GLTFImage 的索引号，在这一步创建完成后，要更新材质中 纹理的source\r\n        console.log('贴图功能正在开发...')\r\n      }\r\n\r\n      // 第三步 写入 buffer\r\n      // 如何写入？创建新的？跟随某个buffer？\r\n      // -- 写入分两步，先 vao，再 textureImage\r\n\r\n      /* --- 获取buffer对象 --- */\r\n      let bfData = undefined\r\n      if (doc.buffers.length === 0) {\r\n        const bfIndex = doc.buffers.push(new GLTFBuffer())\r\n        bfData = doc.buffers[bfIndex].bufferData\r\n      } else {\r\n        bfData = doc.buffers[0].bufferData\r\n      }\r\n\r\n      /* --- 写入vao --- */\r\n      if (bfData !== undefined) {\r\n        // 检查8byte对齐\r\n        const io = new IOBuffer(bfData)\r\n        this.vertexArrayData.vertexBuffers.forEach(vbo => {\r\n          io.writeBytes(new Uint8Array(vbo.buffer))\r\n          // 检查8byte对齐\r\n        })\r\n      } else {\r\n        const io = new IOBuffer()\r\n        bfData = io.buffer as ArrayBuffer\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n    return true\r\n  }\r\n}\r\n\r\nexport default GLTFAddAction","import { IGLTFWriteAction } from \"src/interfaces\"\r\n\r\nclass GLTFDropAction implements IGLTFWriteAction {\r\n  readonly type = \"drop\"\r\n  dropTarget: any\r\n\r\n  submit() {\r\n    return true\r\n  }\r\n}\r\n\r\nexport default GLTFDropAction","import { IGLTFWriteAction } from \"src/interfaces\"\r\n\r\nclass GLTFUpdateAction implements IGLTFWriteAction {\r\n  readonly type = \"update\"\r\n  updateTargetType: string\r\n  updateTargetIndex?: any\r\n\r\n  submit() {\r\n    return true\r\n  }\r\n}\r\n\r\nexport default GLTFUpdateAction","import { GLTFVertexBuffer } from \"src\"\r\nimport { GLTFDocument, GLTFPrimitive, GLTFPrimitiveAttribute, GLTFPrimitiveMode } from \"src/gltf/core\"\r\nimport { GLTFExtensionBase } from \"src/gltf/ext\"\r\nimport { IValidate } from \"src/interfaces\"\r\nimport GLTFVertexIndices from \"./gltf-vertex-indices\"\r\n\r\nfunction createAttribute(accessorStartIndex: number, vertexBuffers: GLTFVertexBuffer[]) {\r\n  const attrs = new GLTFPrimitiveAttribute()\r\n\r\n  vertexBuffers.forEach(vb => {\r\n    switch (vb.type.toString()) {\r\n      case 'position':\r\n        attrs.position = ++accessorStartIndex\r\n        break;\r\n      case 'normal':\r\n        attrs.normal = ++accessorStartIndex\r\n        break;\r\n      case 'uv0':\r\n        attrs.uv0 = ++accessorStartIndex\r\n        break;\r\n      case 'uv1':\r\n        attrs.uv1 = ++accessorStartIndex\r\n        break;\r\n      case 'joints0':\r\n        attrs.joints0 = ++accessorStartIndex\r\n        break;\r\n      case 'weights0':\r\n        attrs.weights0 = ++accessorStartIndex\r\n        break;\r\n      case 'tangent':\r\n        attrs.tangent = ++accessorStartIndex\r\n        break;\r\n      case 'color0':\r\n        attrs.color0 = ++accessorStartIndex\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  })\r\n  return attrs\r\n}\r\n\r\n/**\r\n * GLTFVertexAttributes 相对于 GLTFPrimitive 的数据本体，只不过它保存的是顶点属性的真实数据\r\n */\r\nclass GLTFVertexAttributes implements IValidate {\r\n  /**\r\n   * vertexBuffers，相当于 GLTFPrimitiveAttributes 中每一个 attribute 的数据本体\r\n   */\r\n  vertexBuffers: GLTFVertexBuffer[] = []\r\n  primitiveMode: GLTFPrimitiveMode = GLTFPrimitiveMode.TRIANGLES\r\n  extensions?: Set<GLTFExtensionBase>\r\n  /**\r\n   * indices 与 GLTFPrimitive.indices 意义相同，是索引型数据\r\n   */\r\n  indices?: GLTFVertexIndices\r\n\r\n  /**\r\n   * @todo 检测 indices 数量与 vertexBuffers 的数量关系是否正确\r\n   */\r\n  validate() {\r\n    return false\r\n  }\r\n\r\n  get verticeCount() {\r\n    if (this.vertexBuffers.length === 0) {\r\n      return 0\r\n    }\r\n    return this.vertexBuffers[0].count\r\n  }\r\n\r\n  asPrimitive(doc: GLTFDocument, materialIndex?: number) {\r\n    const prmt = new GLTFPrimitive()\r\n    prmt.material = materialIndex\r\n    prmt.attributes = createAttribute(doc.accessors.length, this.vertexBuffers)\r\n    if (this.indices !== undefined) {\r\n      prmt.indices = ++doc.accessors.length\r\n    }\r\n    prmt.mode = this.primitiveMode\r\n    prmt.doc = doc\r\n    return prmt\r\n  }\r\n}\r\n\r\nexport default GLTFVertexAttributes","import { GLTFAttributeType, GLTFComponentType, GLTFVertexAttributeType } from \"src/gltf/core\";\r\nimport { getAttributeTypeElementCount } from \"src/gltf/core/def/enum/gltf-attribute-type\";\r\nimport { getComponentTypeByteSize } from \"src/gltf/core/def/enum/gltf-component-type\";\r\n\r\nclass GLTFVertexBuffer {\r\n  type: GLTFVertexAttributeType = GLTFVertexAttributeType.POSITION\r\n  buffer: ArrayBuffer\r\n  numberType: GLTFComponentType = GLTFComponentType.FLOAT\r\n  elementType: GLTFAttributeType = GLTFAttributeType.VEC3\r\n\r\n  /**\r\n   * 计算顶点数量\r\n   */\r\n  get count() {\r\n    const cmpSize = getComponentTypeByteSize(this.numberType)\r\n    const numSize = getAttributeTypeElementCount(this.elementType)\r\n    if (this.buffer.byteLength % cmpSize * numSize !== 0) {\r\n      throw new Error('[GLTFVertexBuffer count] 数据与类型不匹配，请检查')\r\n    }\r\n    return this.buffer.byteLength / (cmpSize * numSize)\r\n  }\r\n}\r\n\r\nexport default GLTFVertexBuffer","import { GLTFComponentType } from \"src/gltf/core\"\r\n\r\nclass GLTFVertexIndices {\r\n  data: ArrayBuffer\r\n  count: number\r\n  numberType: GLTFComponentType\r\n}\r\n\r\nexport default GLTFVertexIndices","import { GLTFAccessor, GLTFAnimation, GLTFAsset, GLTFBuffer, GLTFBufferView, GLTFCamera, GLTFDocument, GLTFImage, GLTFMaterial, GLTFMesh, GLTFNode, GLTFSampler, GLTFScene, GLTFSkin, GLTFTexture } from \"src/gltf/core\"\r\nimport { IGLTFObj, IGLTFAccessor, IGLTFAnimation, IGLTFBuffer, IGLTFBufferView, IGLTFCamera, IGLTFImage, IGLTFMaterial, IGLTFMesh, IGLTFNode, IGLTFSampler, IGLTFScene, IGLTFSkin, IGLTFTexture } from \"src/interfaces\"\r\nimport GLTFReadType from \"src/interfaces/GLTFReadType\"\r\nimport GLTFResources from \"src/interfaces/GLTFResources\"\r\n\r\nfunction readBuffers(gltfBuffers: GLTFBuffer[], json: IGLTFBuffer[]) {\r\n  for (const bfjson of json) {\r\n    const bf = GLTFBuffer.fromJson(bfjson)\r\n    gltfBuffers.push(bf)\r\n  }\r\n}\r\n\r\nfunction readBufferViews(gltfBufferViews: GLTFBufferView[], json: IGLTFBufferView[]) {\r\n  for (const bvjson of json) {\r\n    const bv = GLTFBufferView.fromJson(bvjson)\r\n    // extensions 单独处理\r\n    gltfBufferViews.push(bv)\r\n  }\r\n}\r\n\r\nfunction readAccessors(gltfAccessors: GLTFAccessor[], json: IGLTFAccessor[]) {\r\n  for (const accjson of json) {\r\n    const acc = GLTFAccessor.fromJson(accjson)\r\n    // extensions 单独处理\r\n    gltfAccessors.push(acc)\r\n  }\r\n}\r\n\r\nfunction readScenes(gltfScenes: GLTFScene[], json: IGLTFScene[]) {\r\n  for (const scenejson of json) {\r\n    const scene = GLTFScene.fromJson(scenejson)\r\n    gltfScenes.push(scene)\r\n  }\r\n}\r\n\r\nfunction readNodes(gltfNodes: GLTFNode[], json: IGLTFNode[]) {\r\n  for (const nodejson of json) {\r\n    const node = GLTFNode.fromJson(nodejson)\r\n    gltfNodes.push(node)\r\n  }\r\n}\r\n\r\nfunction readMeshs(gltfMeshs: GLTFMesh[], json: IGLTFMesh[]) {\r\n  for (const meshjson of json) {\r\n    const mesh = GLTFMesh.fromJson(meshjson)\r\n    gltfMeshs.push(mesh)\r\n  }\r\n}\r\n\r\nfunction readTextures(gltfTextures: GLTFTexture[], json: IGLTFTexture[]) {\r\n  for (const txjson of json) {\r\n    const tx = GLTFTexture.fromJson(txjson)\r\n    gltfTextures.push(tx)\r\n  }\r\n}\r\n\r\nfunction readImages(gltfImages: GLTFImage[], json: IGLTFImage[]) {\r\n  for (const imgjson of json) {\r\n    const img = GLTFImage.fromJson(imgjson)\r\n    gltfImages.push(img)\r\n  }\r\n}\r\n\r\nfunction readMaterials(gltfMaterials: GLTFMaterial[], json: IGLTFMaterial[]) {\r\n  for (const mtrljson of json) {\r\n    const mtrl = GLTFMaterial.fromJson(mtrljson)\r\n    gltfMaterials.push(mtrl)\r\n  }\r\n}\r\n\r\nfunction readSamplers(gltfSamplers: GLTFSampler[], json: IGLTFSampler[]) {\r\n  for (const spljson of json) {\r\n    const spl = GLTFSampler.fromJson(spljson)\r\n    gltfSamplers.push(spl)\r\n  }\r\n}\r\n\r\nfunction readAnimations(gltfAnimations: GLTFAnimation[], json: IGLTFAnimation[]) {\r\n  for (const anijson of json) {\r\n    const ani = GLTFAnimation.fromJson(anijson)\r\n    gltfAnimations.push(ani)\r\n  }\r\n}\r\n\r\nfunction readSkins(gltfSkins: GLTFSkin[], json: IGLTFSkin[]) {\r\n  for (const skinjson of json) {\r\n    const skin = GLTFSkin.fromJson(skinjson)\r\n    gltfSkins.push(skin)\r\n  }\r\n}\r\n\r\nfunction readCameras(gltfCameras: GLTFCamera[], json: IGLTFCamera[]) {\r\n  for (const camerajson of json) {\r\n    const camera = GLTFCamera.fromJson(camerajson)\r\n    gltfCameras.push(camera)\r\n  }\r\n}\r\n\r\nfunction bind(doc: GLTFDocument) {\r\n  doc.asset.doc = doc\r\n  doc.buffers.forEach(bf => bf.doc = doc)\r\n  doc.bufferViews.forEach(bv => bv.doc = doc)\r\n  doc.accessors.forEach(acc => acc.doc = doc)\r\n  doc.scenes.forEach(scene => scene.doc = doc)\r\n  doc.nodes.forEach(nd => nd.doc = doc)\r\n  doc.meshes.forEach(mesh => mesh.doc = doc)\r\n  if (doc.materials)\r\n    doc.materials.forEach(mtl => mtl.doc = doc)\r\n  if (doc.textures)\r\n    doc.textures.forEach(tx => tx.doc = doc)\r\n  if (doc.images)\r\n    doc.images.forEach(img => img.doc = doc)\r\n  if (doc.samplers)\r\n    doc.samplers.forEach(spl => spl.doc = doc)\r\n  if (doc.animations)\r\n    doc.animations.forEach(ani => ani.doc = doc)\r\n  if (doc.cameras)\r\n    doc.cameras.forEach(camera => camera.doc = doc)\r\n  if (doc.skins)\r\n    doc.skins.forEach(skin => skin.doc = doc)\r\n}\r\n\r\nconst readGLTF = (json: GLTFReadType, ...resources: GLTFResources[]): GLTFDocument => {\r\n  const doc = new GLTFDocument()\r\n  let resourcesLength = resources.length\r\n  console.log(`Resources Length is ${resourcesLength}`);\r\n\r\n  let obj = json\r\n  if (typeof json === \"string\") {\r\n    obj = JSON.parse(json.trim())\r\n  }\r\n  obj = obj as IGLTFObj\r\n\r\n  doc.scene = obj['scene']\r\n  doc.asset = GLTFAsset.readFromJson(obj['asset'])\r\n  readBuffers(doc.buffers, obj['buffers'])\r\n  readBufferViews(doc.bufferViews, obj['bufferViews'])\r\n  readAccessors(doc.accessors, obj['accessors'])\r\n  readScenes(doc.scenes, obj['scenes'])\r\n  readNodes(doc.nodes, obj['nodes'])\r\n  readMeshs(doc.meshes, obj['meshes'])\r\n  if (obj['textures'] !== undefined) {\r\n    readTextures(doc.textures === undefined ? new Array<GLTFTexture>() : doc.textures, obj['textures'])\r\n  }\r\n  if (obj['images'] !== undefined) {\r\n    readImages(doc.images === undefined ? new Array<GLTFImage>() : doc.images, obj['images'])\r\n  }\r\n  if (obj['materials'] !== undefined) {\r\n    readMaterials(doc.materials === undefined ? new Array<GLTFMaterial>() : doc.materials, obj['materials'])\r\n  }\r\n  if (obj['samplers'] !== undefined) {\r\n    readSamplers(doc.samplers === undefined ? new Array<GLTFSampler>() : doc.samplers, obj['samplers'])\r\n  }\r\n  if (obj['animations'] !== undefined) {\r\n    readAnimations(doc.animations === undefined ? new Array<GLTFAnimation>() : doc.animations, obj['animations'])\r\n  }\r\n  if (obj['skins'] !== undefined) {\r\n    readSkins(doc.skins === undefined ? new Array<GLTFSkin>() : doc.skins, obj['skins'])\r\n  }\r\n  if (obj['cameras'] !== undefined) {\r\n    readCameras(doc.cameras === undefined ? new Array<GLTFCamera>() : doc.cameras, obj['cameras'])\r\n  }\r\n\r\n  bind(doc)\r\n  return doc\r\n}\r\n\r\nexport default readGLTF","import { IOBuffer } from \"iobuffer\"\r\nimport readGLTF from \"./read-gltf\"\r\n\r\nconst readGLB = (binary: Uint8Array | ArrayBuffer | Buffer) => {\r\n  /* read head */\r\n  const io = new IOBuffer(binary)\r\n  const magic = io.readChars(4)\r\n  if (magic !== \"gltf\") {\r\n    throw new Error(\"[readGLB()] 不是 glb 二进制\")\r\n  }\r\n  const version = io.readUint32()\r\n  if (version !== 2) {\r\n    throw new Error(\"[readGLB()] 暂不支持其他版本，仅支持 2.0 版本\")\r\n  }\r\n  const length = io.readUint32()\r\n  if (length !== binary.byteLength) {\r\n    throw new Error(\"[readGLB()] 数据长度异常\")\r\n  }\r\n  \r\n  /* read json */\r\n  const jsonByteLength = io.readUint32()\r\n  const jsonType = io.readUint32()\r\n  console.log(`数据块 1 的类型: ${jsonType} (1=json, 0=bin)`)\r\n  const jsonText = io.readChars(jsonByteLength)\r\n  const json = JSON.parse(jsonText)\r\n\r\n  /* read binarydata */\r\n  const binByteLength = io.readUint32()\r\n  const binType = io.readUint32()\r\n  console.log(`数据块 2 的类型: ${binType} (1=json, 0=bin)`)\r\n  let binarydata = undefined\r\n  try {\r\n    binarydata = io.readBytes(binByteLength)\r\n    /* read as gltfdocument */\r\n    return readGLTF(json, binarydata)\r\n  } catch {\r\n    throw new Error(\"[readGLB()] 数据长度异常，试检查 glb binary 块有无问题\")\r\n  }\r\n}\r\n\r\nexport default readGLB","type TypedArrayType = Uint8Array | Uint16Array | Uint32Array | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array\r\n/**\r\n * 求最大最小值\r\n * @param {number[]} arr 数组\r\n * @param {boolean} [max] 若为 true 则求最大值。默认是 true。否则求最小值\r\n * @returns \r\n */\r\nexport function arrayMinMax(arr: number[] | TypedArrayType, max: boolean = true): number {\r\n  const length = arr.length\r\n  if (length === 0) {\r\n    throw new Error('数组不能为空')\r\n  }\r\n  let value = arr[0]\r\n  for (let i = 1; i < length; i++) {\r\n    const arri = arr[i]\r\n    if (max ? arri > value : arri < value) {\r\n      value = arri\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\nexport function strideArrayMinMax(arr: number[] | TypedArrayType, dimension: number = 1, max: boolean = true): number[] {\r\n  const length = arr.length\r\n  if (length === 0 || length % dimension !== 0) {\r\n    throw new Error(`数组为空或数组长度 length: ${length} 不能被 stride: ${dimension} 整除`)\r\n  }\r\n\r\n  if (dimension === 1) {\r\n    return [arrayMinMax(arr, max)]\r\n  }\r\n\r\n  const values: number[] = []\r\n  const dimensionLength = length / dimension\r\n  // 先求 stride 个初值\r\n  for (let i = 0; i < dimension; i++) {\r\n    values.push(arr[i])\r\n  }\r\n  // 然后对整个数组进行遍历取最值\r\n  for (let j = 0; j < dimensionLength; j++) {\r\n    for (let k = 0; k < dimension; k++) {\r\n      if (max ? arr[j + k] > values[k] : arr[j + k] < values[k]) {\r\n        values[k] = arr[j + k]\r\n      }\r\n    }\r\n  }\r\n  return values\r\n}\r\n","import {\r\n  GLTFAttributeType,\r\n  GLTFComponentType\r\n} from \"src/gltf/core\";\r\n\r\nclass GLTFVertexBufferObject {\r\n  name: string;\r\n  data: ArrayBuffer;\r\n  elementType: GLTFAttributeType;\r\n  valueType: GLTFComponentType;\r\n\r\n  constructor(options: {\r\n    name: string;\r\n    data: ArrayBuffer;\r\n    elementType: GLTFAttributeType;\r\n    valueType: GLTFComponentType;\r\n  }) {\r\n    this.name = options.name;\r\n    this.data = options.data;\r\n    this.elementType = options.elementType;\r\n    this.valueType = options.valueType\r\n  }\r\n\r\n  getTypedArray() {\r\n    switch (this.valueType) {\r\n      case GLTFComponentType.BYTE:\r\n        return new Int8Array(this.data)\r\n      case GLTFComponentType.UNSIGNED_BYTE:\r\n        return new Uint8Array(this.data)\r\n      case GLTFComponentType.SHORT:\r\n        return new Int16Array(this.data)\r\n      case GLTFComponentType.UNSIGNED_SHORT:\r\n        return new Uint16Array(this.data)\r\n      case GLTFComponentType.UNSIGNED_INT:\r\n        return new Uint32Array(this.data)\r\n      case GLTFComponentType.FLOAT:\r\n        return new Float32Array(this.data)\r\n    }\r\n  }\r\n}\r\n\r\nexport default GLTFVertexBufferObject;\r\n","import {\r\n  GLTFAccessor,\r\n  GLTFAttributeType,\r\n  GLTFBuffer,\r\n  GLTFBufferView,\r\n  GLTFComponentType,\r\n  GLTFDocument,\r\n  GLTFMaterial,\r\n  GLTFMesh,\r\n  GLTFNode,\r\n  GLTFPrimitive,\r\n  GLTFScene,\r\n} from \"src/gltf/core\";\r\nimport { getAttributeTypeElementCount } from \"src/gltf/core/def/enum/gltf-attribute-type\";\r\nimport { getComponentTypeByteSize } from \"src/gltf/core/def/enum/gltf-component-type\";\r\nimport { strideArrayMinMax } from \"src/utils/array-minmax\";\r\nimport GLTFVertexBufferObject from \"./gltf-vertex-buffer-object\";\r\n\r\nfunction contact(b1: ArrayBuffer, b2: ArrayBuffer) {\r\n  if (globalThis.constructor.name === 'Object') {\r\n    // nodejs\r\n    const mergedBuffer = Buffer.concat([\r\n      new Uint8Array(b1),\r\n      new Uint8Array(b2),\r\n    ]);\r\n    return mergedBuffer.buffer;\r\n  } else {\r\n    const totalLength = b1.byteLength + b2.byteLength;\r\n    const mergedBuffer = new Uint8Array(totalLength);\r\n    mergedBuffer.set(new Uint8Array(b1), 0);\r\n    mergedBuffer.set(new Uint8Array(b2), b1.byteLength);\r\n    return mergedBuffer.buffer;\r\n  }\r\n}\r\n\r\nfunction setAttribute(\r\n  prmt: GLTFPrimitive,\r\n  name: string,\r\n  accessorIndex: number\r\n) {\r\n  const attrs = prmt.attributes;\r\n  switch (name) {\r\n    case \"position\":\r\n      attrs.position = accessorIndex;\r\n      break;\r\n    case \"uv0\":\r\n      attrs.uv0 = accessorIndex;\r\n      break;\r\n    case \"uv1\":\r\n      attrs.uv1 = accessorIndex;\r\n      break;\r\n    case \"normal\":\r\n      attrs.normal = accessorIndex;\r\n      break;\r\n    case \"_batchid\":\r\n      attrs._batchid = accessorIndex;\r\n      break;\r\n    case \"tangent\":\r\n      attrs.tangent = accessorIndex;\r\n      break;\r\n    case \"color0\":\r\n      attrs.color0 = accessorIndex;\r\n      break;\r\n    case \"weights0\":\r\n      attrs.weights0 = accessorIndex;\r\n      break;\r\n    case \"joints0\":\r\n      attrs.joints0 = accessorIndex;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nclass GLTFPrimitiveBuilder {\r\n  count: number;\r\n  vao: GLTFVertexBufferObject[] = [];\r\n  _mesh?: GLTFMesh;\r\n  _material?: GLTFMaterial;\r\n\r\n  constructor(vertexCount: number) {\r\n    if (!Number.isInteger(vertexCount) || vertexCount <= 0) {\r\n      throw new Error(\r\n        `[GLTFPrimitive ctor] vertexCount: ${vertexCount} 不正确`\r\n      );\r\n    }\r\n    this.count = vertexCount;\r\n  }\r\n\r\n  // 规定 position、uv0、normal 必须是 f32\r\n\r\n  setPosition(data: Float32Array) {\r\n    if (data.length / 3 !== this.count) {\r\n      return false;\r\n    }\r\n\r\n    const positionVBO = new GLTFVertexBufferObject({\r\n      name: \"position\",\r\n      data: data.buffer,\r\n      elementType: GLTFAttributeType.VEC3,\r\n      valueType: GLTFComponentType.FLOAT,\r\n    });\r\n    this.vao.push(positionVBO);\r\n    return true;\r\n  }\r\n\r\n  setUV0(data: Float32Array) {\r\n    if (data.length / 2 !== this.count) {\r\n      return false;\r\n    }\r\n\r\n    const uvVBO = new GLTFVertexBufferObject({\r\n      name: \"uv0\",\r\n      data: data.buffer,\r\n      elementType: GLTFAttributeType.VEC2,\r\n      valueType: GLTFComponentType.FLOAT,\r\n    });\r\n    this.vao.push(uvVBO);\r\n    return true;\r\n  }\r\n\r\n  setNormal(data: Float32Array) {\r\n    if (data.length / 3 !== this.count) {\r\n      return false;\r\n    }\r\n\r\n    const normalVBO = new GLTFVertexBufferObject({\r\n      name: \"normal\",\r\n      data: data.buffer,\r\n      elementType: GLTFAttributeType.VEC3,\r\n      valueType: GLTFComponentType.FLOAT,\r\n    });\r\n    this.vao.push(normalVBO);\r\n    return true;\r\n  }\r\n\r\n  setIndices(data: Uint8Array | Uint16Array | Uint32Array) {\r\n    console.log(data)\r\n  }\r\n\r\n  setOther(\r\n    vertexAttributeName: string,\r\n    data: ArrayBuffer,\r\n    dataType: GLTFAttributeType,\r\n    dataValueType: GLTFComponentType\r\n  ) {\r\n    const vbo = new GLTFVertexBufferObject({\r\n      name: vertexAttributeName,\r\n      data: data,\r\n      elementType: dataType,\r\n      valueType: dataValueType,\r\n    });\r\n    this.vao.push(vbo);\r\n  }\r\n\r\n  set mesh(value: GLTFMesh) {\r\n    this._mesh = value;\r\n  }\r\n\r\n  set material(value: GLTFMaterial) {\r\n    this._material = value;\r\n  }\r\n\r\n  submit(doc: GLTFDocument) {\r\n    let meshDef: GLTFMesh;\r\n    let nodeDef: GLTFNode | undefined;\r\n    let nodeIndex: number = -1\r\n    const prmt = GLTFPrimitive.fromJson({\r\n      attributes: {\r\n        POSITION: -1,\r\n      },\r\n      mode: 4,\r\n    });\r\n\r\n    // 若没定义 mesh\r\n    if (this._mesh === undefined) {\r\n      // 创建新的 mesh 和 node 并顺次推入 doc 中\r\n      meshDef = GLTFMesh.fromJson({\r\n        primitives: [],\r\n      });\r\n      doc.meshes.push(meshDef);\r\n      nodeDef = GLTFNode.fromJson({\r\n        children: [],\r\n        mesh: doc.meshes.length - 1,\r\n        matrix: [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]\r\n      });\r\n      nodeIndex = doc.nodes.push(nodeDef) - 1;\r\n    } else {\r\n      meshDef = this._mesh;\r\n      // 步骤1 计算 mesh 的索引号\r\n      let meshIdx = -1;\r\n      if (meshDef.doc !== undefined) {\r\n        let tempId = meshDef.doc.meshes.indexOf(meshDef);\r\n        if (tempId !== -1) {\r\n          meshIdx = tempId;\r\n        } else {\r\n          meshIdx = meshDef.doc.meshes.push(meshDef) - 1;\r\n        }\r\n      } else {\r\n        meshIdx = doc.meshes.push(meshDef) - 1;\r\n      }\r\n      // 步骤2 遍历所有 node，查找对应的 node，若无，创建新的 node\r\n      doc.nodes.forEach((node, index) => {\r\n        if (node.mesh !== undefined && node.mesh === meshIdx) {\r\n          nodeDef = node;\r\n          nodeIndex = index\r\n        }\r\n      });\r\n      if (nodeDef === undefined) {\r\n        nodeDef = GLTFNode.fromJson({\r\n          children: [],\r\n          mesh: meshIdx,\r\n          matrix: [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]\r\n        });\r\n        nodeIndex = doc.nodes.push(nodeDef) - 1;\r\n      }\r\n    }\r\n\r\n    meshDef.primitives.push(prmt);\r\n    const scene = GLTFScene.fromJson({\r\n      nodes: [nodeIndex]\r\n    })\r\n    doc.scenes.push(scene)\r\n\r\n    // 创建 accessor 和 bufferView，同时推入 data 到 buffer[0]\r\n    this.vao.forEach((vbo, index, originArr) => {\r\n      const bufferView = GLTFBufferView.fromJson({\r\n        buffer: 0,\r\n        byteLength: vbo.data.byteLength,\r\n        byteOffset: index === 0 ? 0 : originArr[index - 1].data.byteLength\r\n      });\r\n      const bvIdx = doc.bufferViews.push(bufferView) - 1;\r\n      const valueType = getComponentTypeByteSize(vbo.valueType)\r\n      const elementType = getAttributeTypeElementCount(vbo.elementType)\r\n\r\n      const dataTypedArray = vbo.getTypedArray()\r\n      const accessor = GLTFAccessor.fromJson({\r\n        componentType: vbo.valueType,\r\n        count: vbo.data.byteLength / (valueType * elementType),\r\n        type: vbo.elementType,\r\n        bufferView: bvIdx,\r\n        byteOffset: 0,\r\n        max: strideArrayMinMax(dataTypedArray, elementType, true),\r\n        min: strideArrayMinMax(dataTypedArray, elementType, false)\r\n      });\r\n      const accIdx = doc.accessors.push(accessor) - 1;\r\n      setAttribute(prmt, vbo.name, accIdx);\r\n\r\n      let bufferZero = doc.buffers[0];\r\n      if (bufferZero === undefined) {\r\n        bufferZero = GLTFBuffer.fromJson({\r\n          byteLength: 0\r\n        })\r\n        doc.buffers.push(bufferZero)\r\n      }\r\n      let bufferZeroData =\r\n        bufferZero.bufferData === undefined\r\n          ? new ArrayBuffer(0)\r\n          : bufferZero.bufferData;\r\n      bufferZero.bufferData = contact(bufferZeroData, vbo.data);\r\n      bufferZero.byteLength += vbo.data.byteLength\r\n    });\r\n\r\n    /* material 阶段 todo */\r\n    if (this._material !== undefined) {\r\n      // 获取 material 的索引\r\n      if (doc.materials !== undefined) {\r\n        const tempIdx = doc.materials.indexOf(this._material);\r\n        if (tempIdx !== -1) {\r\n          prmt.material = tempIdx;\r\n        } else {\r\n          prmt.material = doc.materials.push(this._material) - 1;\r\n        }\r\n      } else {\r\n        doc.materials = [];\r\n        prmt.material = doc.materials.push(this._material) - 1;\r\n      }\r\n\r\n      // 写入 image ?\r\n    }\r\n  }\r\n}\r\n\r\nexport default GLTFPrimitiveBuilder;\r\n","class TilesetExtBase {\r\n  \r\n}\r\n\r\nexport default TilesetExtBase","import TilesetExtBase from \"./ext-base\"\r\n\r\nclass ExtBatchtableHierarchy extends TilesetExtBase {\r\n  readonly name = \"3DTILES_batch_table_hierarchy\"\r\n\r\n  load() {\r\n    \r\n  }\r\n}\r\n\r\nexport default ExtBatchtableHierarchy","import TilesetExtBase from \"./ext-base\";\r\n\r\nclass ExtPntsDraco extends TilesetExtBase {\r\n  readonly name = \"3DTILES_draco_point_compression\"\r\n}\r\n\r\nexport default ExtPntsDraco","import TilesetExtBase from \"./ext-base\"\r\n\r\nclass ExtContentGLTF extends TilesetExtBase {\r\n  readonly name = \"3DTILES_content_gltf\"\r\n}\r\n\r\nexport default ExtContentGLTF","import TilesetExtBase from \"./ext-base\"\r\n\r\nclass ExtImplicitTiling extends TilesetExtBase {\r\n  readonly name = \"3DTILES_implicit_tiling\"\r\n}\r\n\r\nexport default ExtImplicitTiling","import TilesetExtBase from \"./ext-base\"\r\n\r\nclass ExtLayers extends TilesetExtBase {\r\n  readonly name = \"3DTILES_layers\"\r\n}\r\n\r\nexport default ExtLayers","import TilesetExtBase from \"./ext-base\"\r\n\r\nclass ExtMetadata extends TilesetExtBase {\r\n  readonly name = \"3DTILES_metadata\"\r\n}\r\n\r\nexport default ExtMetadata","import TilesetExtBase from \"./ext-base\"\r\n\r\nclass ExtMultipleContent extends TilesetExtBase {\r\n  readonly name = \"3DTILES_multiple_contents\"\r\n}\r\n\r\nexport default ExtMultipleContent","import IValidate from \"../../../interfaces/IValidate\"\r\nimport TilesetExtBase from \"../../ext/ext-base\"\r\nimport TileRefine from \"./enum/tile-refine\"\r\nimport TileBoundingVolume from \"./tile-bounding-volume\"\r\nimport TileContent from \"./tile-content\"\r\n\r\nclass Tile implements IValidate {\r\n  boundingVolume: TileBoundingVolume\r\n  geometricError: number\r\n  viewerRequestVolume?: TileBoundingVolume\r\n  refine?: TileRefine\r\n  content?: TileContent\r\n  transform?: number[] = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1] // wait to def as Mat4\r\n  children?: Tile[]\r\n  extensions?: Set<TilesetExtBase> = new Set()\r\n  extras?: Object\r\n\r\n  validate() {\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * @todo\r\n   */\r\n  toJson() {\r\n    if (!this.validate()) {\r\n      throw new Error('[Tile toJson()] 验证此对象失败！')\r\n    }\r\n    const obj = {}\r\n    if (this.transform !== undefined) {\r\n      Object.defineProperty(obj, 'transform', {\r\n        value: this.transform\r\n      })\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default Tile","import ITilesetConstructionParam from \"../../../interfaces/tileset/ITilesetConstructionParam\"\r\nimport TilesetExtBase from \"../../ext/ext-base\"\r\nimport Asset from \"./asset\"\r\nimport Property from \"./property\"\r\nimport Tile from \"./tile\"\r\n\r\nclass Tileset {\r\n  asset: Asset\r\n  root: Tile\r\n  geometricError: number\r\n  uri: string\r\n  extensions?: Set<TilesetExtBase> = new Set()\r\n  extras?: any\r\n  extensionsUsed?: string[] = []\r\n  extensionsRequired?: string[] = []\r\n  properties?: Map<any, Property>\r\n\r\n  constructor(options: ITilesetConstructionParam) {\r\n    this.root = options.root\r\n    this.geometricError = options.geometricError\r\n    this.uri = options.uri\r\n  }\r\n\r\n  /**\r\n   * @deprecated `Tileset.url` 已废弃，请使用 `Tileset.uri`\r\n   */\r\n  get url() {\r\n    return this.uri\r\n  }\r\n  set url(value: string) {\r\n    this.uri = value\r\n  }\r\n}\r\n\r\nexport default Tileset","import IValidate from \"../../../interfaces/IValidate\"\r\nimport TilesetExtBase from \"../../ext/ext-base\"\r\n\r\nclass TileBoundingVolume implements IValidate {\r\n  box?: number[]\r\n  region?: number[]\r\n  sphere?: number[]\r\n  extensions?: Set<TilesetExtBase>\r\n  extras?: any\r\n\r\n  validate() {\r\n    const boxExist = this.box === undefined ? 1 : 0\r\n    const regionExist = this.region === undefined ? 1 : 0\r\n    const sphereExist = this.sphere === undefined ? 1 : 0\r\n    // === 3 意思是三个都不存在\r\n    // === 2 意思是存在 1 个\r\n    // === 1 意思是存在 2 个\r\n    // === 0 意思是存在 3 个\r\n    if (boxExist + regionExist + sphereExist !== 2) {\r\n      return false\r\n    }\r\n\r\n    if ((<number[]>this.box).length != 12)\r\n      return false\r\n    if ((<number[]>this.region).length != 6)\r\n      return false\r\n    if ((<number[]>this.sphere).length != 4)\r\n      return false\r\n\r\n    return true\r\n  }\r\n}\r\n\r\nexport default TileBoundingVolume","import IValidate from \"../../../interfaces/IValidate\"\r\nimport TilesetExtBase from \"../../ext/ext-base\"\r\nimport TileBoundingVolume from \"./tile-bounding-volume\"\r\n// import * as URI from 'uri-js'\r\n\r\nclass TileContent implements IValidate {\r\n  boundingVolume?: TileBoundingVolume\r\n  uri: string\r\n  extensions?: Set<TilesetExtBase> = new Set()\r\n  extras?: any\r\n\r\n  /**\r\n   * @deprecated `TileContent.url` 已废弃，请使用 `TileContent.uri`\r\n   */\r\n  get url() {\r\n    return this.uri\r\n  }\r\n\r\n  validate() {\r\n    return true\r\n  }\r\n}\r\n\r\nexport default TileContent","import TilesetExtBase from \"../../ext/ext-base\"\r\n\r\nclass Property {\r\n  maximum: number\r\n  minimum: number\r\n  extensions?: Set<TilesetExtBase>\r\n  extras?: any\r\n}\r\n\r\nexport default Property","import IValidate from \"../../../interfaces/IValidate\"\r\nimport TilesetExtBase from \"../../ext/ext-base\"\r\n\r\nclass Asset implements IValidate {\r\n  version: string\r\n  tilesetVersion?: string\r\n  extensions?: Set<TilesetExtBase>\r\n  extras?: Object\r\n\r\n  validate() {\r\n    return true\r\n  }\r\n}\r\n\r\nexport default Asset","import IValidate from \"../../../interfaces/IValidate\";\r\n\r\nclass TileHeaderBase implements IValidate {\r\n  magic: string\r\n  version: number\r\n  byteLength: number\r\n\r\n  validate() {\r\n    return true\r\n  }\r\n}\r\n\r\nexport default TileHeaderBase","import TileHeaderBase from \"../tile-header-base\";\r\n\r\nclass B3dmHeader extends TileHeaderBase {\r\n  featureTableJSONByteLength: number\r\n  featureTableBinaryByteLength: number\r\n  batchTableJSONByteLength: number\r\n  batchTableBinaryByteLength: number\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n}\r\n\r\nexport default B3dmHeader","enum FeatureTableType {\r\n  B3dm = \"b3dm\",\r\n  I3dm = \"i3dm\",\r\n  Pnts = \"pnts\",\r\n  Vctr = \"vctr\"\r\n}\r\n\r\nexport default FeatureTableType","import IValidate from \"../../../../interfaces/IValidate\"\r\nimport TilesetExtBase from \"../../../ext/ext-base\"\r\nimport FeatureTableType from \"../enum/featuretable-type\"\r\n\r\nclass FeatureTable implements IValidate {\r\n\r\n  _json: Object\r\n  _binary: Uint8Array\r\n  extensions?: Set<TilesetExtBase>\r\n  extras?: any\r\n\r\n  featureTableType: FeatureTableType\r\n\r\n  validate() {\r\n    return false // base class always return false.\r\n  }\r\n}\r\n\r\nexport default FeatureTable","import IValidate from \"../../../../interfaces/IValidate\"\r\nimport IB3dmFTJson from \"../../../../interfaces/tileset/IB3dmFTJson\"\r\n\r\nimport FeatureTableType from \"../enum/featuretable-type\"\r\nimport FeatureTable from \"./featuretable-base\"\r\n\r\nfunction validateB3dmBatchTable(table: B3dmFeatureTable): boolean {\r\n  return table.batchLength === undefined ? false : true\r\n}\r\n\r\nfunction parse(table: B3dmFeatureTable) {\r\n  const json = table._json as IB3dmFTJson\r\n  table.batchLength = json['BATCH_LENGTH']\r\n  table.rtcCenter = json['RTC_CENTER']\r\n\r\n  if (json['extensions'] !== undefined) {\r\n    table.extensions = new Set()\r\n  }\r\n  table.extras = json['extras']\r\n}\r\n\r\nclass B3dmFeatureTable extends FeatureTable implements IValidate {\r\n\r\n  batchLength: number\r\n  rtcCenter?: number[]\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  static createFromJSON(json: Object, binary: Uint8Array) {\r\n    const ft = new B3dmFeatureTable()\r\n\r\n    ft._json = json\r\n    ft._binary = binary\r\n    ft.featureTableType = FeatureTableType.B3dm\r\n\r\n    parse(ft)\r\n\r\n    return ft\r\n  }\r\n\r\n  validate() {\r\n    return validateB3dmBatchTable(this)\r\n  }\r\n}\r\n\r\nexport default B3dmFeatureTable","import { IOBuffer } from \"iobuffer\"\r\nimport IValidate from \"../../../../interfaces/IValidate\"\r\nimport IBTBinaryRef from \"../../../../interfaces/tileset/IBTBinaryRef\"\r\nimport IBTJson, { BTJsonValue } from \"../../../../interfaces/tileset/IBTJson\"\r\nimport TilesetExtBase from \"../../../ext/ext-base\"\r\n\r\n/*\r\n  batchtable\r\n    json: 它有可能是n个数组，每个数组的长度等于不同瓦片的 featureTableJSON.XXXLength，b3dm 是 BATCH_LENGTH，等等：\r\n            {\r\n              \"name\": ['name1', 'name2', 'name3'],\r\n              \"height\": [10, 20, 5]\r\n            }\r\n          也有可能是对二进制 batchtable binary 的引用定义，拥有 byteOffset、componentType、type 三个属性的对象\r\n            {\r\n              \"name\": {\r\n                byteOffset: 16, // 相对于 batchtable binary body 的偏移值\r\n                type: \"SCALAR\",\r\n                componentType: \"INT\"\r\n              }\r\n            }\r\n          所以，batchtable 有一个弱点，不能用 binary 存储文本数据，因为第二种情况只允许存储 scalar、vec2、vec3、vec4 四种数值类型\r\n          不过使用 byte + scalar 的方式或许可以存储字节信息。\r\n    binary: 根据 json 中第二种定义而存储数据\r\n\r\n  扩展：层级 batchtable：\r\n    \r\n */\r\n\r\nfunction parse(table: BatchTable) {\r\n  for (const k of Object.keys(table._json)) {\r\n    table.variables.set(k, table._json[k])\r\n  }\r\n}\r\n\r\nclass BatchTable implements IValidate {\r\n\r\n  _json: IBTJson\r\n  _binary: Uint8Array\r\n\r\n  variables: Map<string, BTJsonValue> = new Map()\r\n  extensions?: Set<TilesetExtBase>\r\n  extras?: any\r\n\r\n  static createFromJSON(json: IBTJson, binary: Uint8Array) {\r\n    const bt = new BatchTable()\r\n    bt._json = json\r\n    bt._binary = binary\r\n\r\n    parse(bt)\r\n\r\n    return bt\r\n  }\r\n\r\n  validate() {\r\n    return true\r\n  }\r\n\r\n  get variableNames() {\r\n    return Object.keys(this._json)\r\n  }\r\n\r\n  get variableCounts() {\r\n    return this.variableNames.length\r\n  }\r\n\r\n  getVariable(name: string) {\r\n    if (this.variables.has(name)) {\r\n      const v = this.variables.get(name)\r\n      return v\r\n    }\r\n\r\n    throw new Error(`[BatchTable getVariable()] 没有这个值：${name}。`)\r\n  }\r\n}\r\n\r\nfunction timesOperator(fn: () => void, times: number) {\r\n  for (let i = 0; i < times; i++) fn()\r\n}\r\n\r\nfunction getTimes(type: string) {\r\n  return type === \"SCALAR\" ? 1 :\r\n  type === \"VEC2\" ? 2 :\r\n  type === \"VEC3\" ? 3 :\r\n  type === \"VEC4\" ? 4 : -1\r\n}\r\n\r\nfunction getReadFunction(io: IOBuffer, componentType: string) {\r\n  return componentType === \"BYTE\" ? io.readInt8 :\r\n  componentType === \"UNSIGNED_BYTE\" ? io.readUint8 :\r\n  componentType === \"SHORT\" ? io.readInt16 :\r\n  componentType === \"UNSIGNED_SHORT\" ? io.readUint16 : \r\n  componentType === \"INT\" ? io.readInt32:\r\n  componentType === \"UNSIGNED_INT\" ? io.readUint32 :\r\n  componentType === \"FLOAT\" ? io.readFloat32 : io.readFloat64\r\n}\r\n\r\n/**\r\n * 将 BatchTableBinary 读取并转换成普通的数字数组\r\n * @param {BatchTable} table BatchTable 实例\r\n * @param {IBTBinaryRef} variable 从 BatchTable JSON 中获取的引用描述对象，可使用 BatchTable.prototype.getVariable(name) 获取\r\n * @param {number} count FeatureTable 中的 XXXLength，即每个变量有多少个数据\r\n * @returns {number[]}\r\n */\r\nexport const parseBTBinary2Array = (table: BatchTable, variable: IBTBinaryRef, count: number) => {\r\n  let hasHierarchy = false\r\n  table.extensions?.forEach(ext => {\r\n    if ('name' in ext && ext['name'] === '3DTILES_batch_table_hierarchy') {\r\n      hasHierarchy = true\r\n    }\r\n  })\r\n  if (hasHierarchy) {\r\n    return\r\n  }\r\n\r\n  const io = new IOBuffer(table._binary.buffer)\r\n  io.skip(variable.byteOffset)\r\n  const result: number[] = []\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    const readFunction = getReadFunction(io, variable.componentType)\r\n    timesOperator(() => result.push(readFunction()), getTimes(variable.type))\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport default BatchTable","import { IOBuffer } from 'iobuffer'\r\n\r\nimport IValidate from \"../../../../interfaces/IValidate\"\r\n\r\nimport { GLTFDocument } from \"../../../../gltf\"\r\nimport B3dmHeader from \"./header\"\r\nimport B3dmFeatureTable from '../featuretable/featuretable-b3dm'\r\nimport { BatchTable } from \"../batchtable\"\r\n\r\nfunction parseHeader(header: B3dmHeader, io: IOBuffer) {\r\n  io.rewind()\r\n  header.magic = io.readChars(4)\r\n  header.version = io.readUint32()\r\n  header.byteLength = io.readUint32()\r\n  header.featureTableJSONByteLength = io.readUint32()\r\n  header.featureTableBinaryByteLength = io.readUint32()\r\n  header.batchTableJSONByteLength = io.readUint32()\r\n  header.batchTableBinaryByteLength = io.readUint32()\r\n}\r\n\r\nfunction parse(b3dm: B3dm, buffer: ArrayBuffer) {\r\n  const iobuffer = new IOBuffer(buffer)\r\n  parseHeader(b3dm.header, iobuffer)\r\n\r\n  if (b3dm.byteLength % 8 != 0) {\r\n    throw new Error('[B3dm 实例化错误] byteLength 未 8 字节对齐。')\r\n  }\r\n\r\n  iobuffer.rewind()\r\n  iobuffer.skip(28)\r\n  const ftJSON = JSON.parse(iobuffer.readChars(b3dm.featureTableJSONByteLength))\r\n  const ftBin = iobuffer.readBytes(b3dm.featureTableBinaryByteLength)\r\n  b3dm.featureTable = B3dmFeatureTable.createFromJSON(ftJSON, ftBin)\r\n\r\n  if (b3dm.batchTableJSONByteLength !== 0) {\r\n    const btJSON = JSON.parse(iobuffer.readChars(b3dm.batchTableJSONByteLength))\r\n    const btBin = iobuffer.readBytes(b3dm.batchTableBinaryByteLength)\r\n    b3dm.batchTable = BatchTable.createFromJSON(btJSON, btBin)\r\n  }\r\n\r\n  /* TODO: Parse GLB to GLTFDocument */\r\n}\r\n\r\nclass B3dm implements IValidate {\r\n  header: B3dmHeader\r\n  featureTable: B3dmFeatureTable\r\n  batchTable?: BatchTable\r\n  parsedGLTF: GLTFDocument\r\n  buffer?: ArrayBuffer\r\n\r\n  constructor(buffer: ArrayBuffer, cacheBuffer = false) {\r\n    this.header = new B3dmHeader()\r\n    parse(this, buffer)\r\n\r\n    if (cacheBuffer === true) {\r\n      this.buffer = buffer\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    return true\r\n  }\r\n\r\n  get magic() {\r\n    return this.header.magic\r\n  }\r\n\r\n  get byteLength() {\r\n    return this.header.byteLength\r\n  }\r\n\r\n  get version() {\r\n    return this.header.version\r\n  }\r\n\r\n  get featureTableJSONByteLength() {\r\n    return this.header.featureTableJSONByteLength\r\n  }\r\n\r\n  get featureTableBinaryByteLength() {\r\n    return this.header.featureTableBinaryByteLength\r\n  }\r\n\r\n  get batchTableJSONByteLength() {\r\n    return this.header.batchTableJSONByteLength\r\n  }\r\n\r\n  get batchTableBinaryByteLength() {\r\n    return this.header.batchTableBinaryByteLength\r\n  }\r\n\r\n  get sizeWithoutGLB() {\r\n    return 28 + \r\n    this.featureTableJSONByteLength + \r\n    this.featureTableBinaryByteLength + \r\n    this.batchTableJSONByteLength + \r\n    this.batchTableBinaryByteLength\r\n  }\r\n}\r\n\r\nexport default B3dm","import IValidate from \"../../../../interfaces/IValidate\"\r\nimport TileHeaderBase from \"../tile-header-base\"\r\n\r\nclass I3dmHeader extends TileHeaderBase implements IValidate {\r\n  featureTableJSONByteLength: number\r\n  featureTableBinaryByteLength: number\r\n  batchTableJSONByteLength: number\r\n  batchTableBinaryByteLength: number\r\n  gltfFormat: number\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  validate() {\r\n    if (this.gltfFormat !== 0 && this.gltfFormat !== 1) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\nexport default I3dmHeader","import IValidate from \"../../../../interfaces/IValidate\"\r\nimport IFTBinaryRef from \"../../../../interfaces/tileset/IFTBinaryRef\"\r\nimport II3dmFTJson from \"../../../../interfaces/tileset/II3dmFTJson\"\r\n\r\nimport FeatureTableType from \"../enum/featuretable-type\"\r\nimport FeatureTable from \"./featuretable-base\"\r\n\r\nfunction validateI3dmBatchTable(table: I3dmFeatureTable): boolean {\r\n  if (table.position === undefined && table.positionQuantized === undefined) {\r\n    return false\r\n  }\r\n  if (table.position !== undefined && table.positionQuantized !== undefined) {\r\n    return false\r\n  }\r\n  if (table.positionQuantized !== undefined) {\r\n    if (table.quantizedVolumeOffset === undefined || table.quantizedVolumeScale === undefined) {\r\n      return false\r\n    }\r\n  }\r\n  if (\r\n    (table.normalUp === undefined && table.normalRight !== undefined) ||\r\n    (table.normalRight === undefined && table.normalUp !== undefined)\r\n  ) {\r\n    return false\r\n  }\r\n  if (\r\n    (table.normalUpOct32p === undefined && table.normalRightOct32p !== undefined) ||\r\n    (table.normalRightOct32p === undefined && table.normalUpOct32p !== undefined)\r\n  ) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nfunction parse(table: I3dmFeatureTable) {\r\n  const json = table._json as II3dmFTJson\r\n  table.position = json['POSITION']\r\n  table.positionQuantized = json['POSITION_QUANTIZED']\r\n  table.normalUp = json['NORMAL_UP']\r\n  table.normalRight = json['NORMAL_RIGHT']\r\n  table.normalUpOct32p = json['NORMAL_UP_OCT32P']\r\n  table.normalRightOct32p = json['NORMAL_RIGHT_OCT32P']\r\n  table.scale = json['SCALE']\r\n  table.scaleNonUniform = json['SCALE_NON_UNIFORM']\r\n  table.instancesLength = json['INSTANCES_LENGTH']\r\n  table.rtcCenter = json['RTC_CENTER']\r\n  table.quantizedVolumeOffset = json['QUANTIZED_VOLUME_OFFSET']\r\n  table.quantizedVolumeScale = json['QUANTIZED_VOLUME_SCALE']\r\n\r\n  if (json['extensions'] !== undefined) {\r\n    table.extensions = new Set()\r\n    // todo\r\n  }\r\n  table.extras = json['extras']\r\n}\r\n\r\nclass I3dmFeatureTable extends FeatureTable implements IValidate {\r\n\r\n  position?: IFTBinaryRef\r\n  positionQuantized?: IFTBinaryRef\r\n  normalUp?: IFTBinaryRef\r\n  normalRight?: IFTBinaryRef\r\n  normalUpOct32p?: IFTBinaryRef\r\n  normalRightOct32p?: IFTBinaryRef\r\n  scale?: IFTBinaryRef\r\n  batchId?: IFTBinaryRef\r\n  scaleNonUniform?: IFTBinaryRef\r\n\r\n  instancesLength: number\r\n\r\n  rtcCenter?: number[]\r\n  quantizedVolumeOffset?: number[]\r\n  quantizedVolumeScale?: number[]\r\n  eastNorthUp?: boolean\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  static createFromJSON(json: Object, binary: Uint8Array) {\r\n    const ft = new I3dmFeatureTable()\r\n\r\n    ft._json = json\r\n    ft._binary = binary\r\n    ft.featureTableType = FeatureTableType.I3dm\r\n\r\n    parse(ft)\r\n\r\n    return ft\r\n  }\r\n\r\n  validate() {\r\n    return validateI3dmBatchTable(this)\r\n  }\r\n}\r\n\r\nexport default I3dmFeatureTable","import { IOBuffer } from \"iobuffer\"\r\n\r\nimport IValidate from \"../../../../interfaces/IValidate\"\r\n\r\nimport { GLTFDocument } from \"../../../../gltf\"\r\nimport I3dmFeatureTable from \"../featuretable/featuretable-i3dm\"\r\nimport I3dmHeader from \"./header\"\r\nimport { BatchTable } from \"../batchtable\"\r\n\r\nfunction parseHeader(header: I3dmHeader, io: IOBuffer) {\r\n  io.rewind()\r\n  header.magic = io.readChars(4)\r\n  header.version = io.readUint32()\r\n  header.byteLength = io.readUint32()\r\n  header.featureTableJSONByteLength = io.readUint32()\r\n  header.featureTableBinaryByteLength = io.readUint32()\r\n  header.batchTableJSONByteLength = io.readUint32()\r\n  header.batchTableBinaryByteLength = io.readUint32()\r\n  header.gltfFormat = io.readUint32()\r\n}\r\n\r\nfunction parse(i3dm: I3dm, buffer: ArrayBuffer) {\r\n  const iobuffer = new IOBuffer(buffer)\r\n  parseHeader(i3dm.header, iobuffer)\r\n\r\n  if (i3dm.byteLength % 8 != 0) {\r\n    throw new Error('[I3dm 实例化错误] byteLength 未 8 字节对齐。')\r\n  }\r\n\r\n  iobuffer.rewind()\r\n  iobuffer.skip(32)\r\n  const ftJSON = JSON.parse(iobuffer.readChars(i3dm.featureTableJSONByteLength))\r\n  const ftBin = iobuffer.readBytes(i3dm.featureTableBinaryByteLength)\r\n  i3dm.featureTable = I3dmFeatureTable.createFromJSON(ftJSON, ftBin)\r\n\r\n  if (i3dm.batchTableJSONByteLength !== 0) {\r\n    const btJSON = JSON.parse(iobuffer.readChars(i3dm.batchTableJSONByteLength))\r\n    const btBin = iobuffer.readBytes(i3dm.batchTableBinaryByteLength)\r\n    i3dm.batchTable = BatchTable.createFromJSON(btJSON, btBin)\r\n  }\r\n\r\n  /* TODO: Parse GLB to GLTFDocument */\r\n}\r\n\r\nclass I3dm implements IValidate {\r\n  header: I3dmHeader\r\n  featureTable: I3dmFeatureTable\r\n  batchTable?: BatchTable\r\n  externalData: string | GLTFDocument\r\n  buffer?: ArrayBuffer\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor(buffer: ArrayBuffer, cacheBuffer = false) {\r\n    this.header = new I3dmHeader()\r\n    parse(this, buffer)\r\n\r\n    if (cacheBuffer === true) {\r\n      this.buffer = buffer\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    return true\r\n  }\r\n\r\n  get magic() {\r\n    return this.header.magic\r\n  }\r\n\r\n  get byteLength() {\r\n    return this.header.byteLength\r\n  }\r\n\r\n  get version() {\r\n    return this.header.version\r\n  }\r\n\r\n  get featureTableJSONByteLength() {\r\n    return this.header.featureTableJSONByteLength\r\n  }\r\n\r\n  get featureTableBinaryByteLength() {\r\n    return this.header.featureTableBinaryByteLength\r\n  }\r\n\r\n  get batchTableJSONByteLength() {\r\n    return this.header.batchTableJSONByteLength\r\n  }\r\n\r\n  get batchTableBinaryByteLength() {\r\n    return this.header.batchTableBinaryByteLength\r\n  }\r\n\r\n  get gltfFormat() {\r\n    return this.header.gltfFormat\r\n  }\r\n\r\n  get sizeWithoutExternalData() {\r\n    return 32 + \r\n    this.featureTableJSONByteLength + \r\n    this.featureTableBinaryByteLength + \r\n    this.batchTableJSONByteLength + \r\n    this.batchTableBinaryByteLength\r\n  }\r\n}\r\n\r\nexport default I3dm","import TileHeaderBase from \"../tile-header-base\"\r\n\r\nclass PntsHeader extends TileHeaderBase {\r\n  featureTableJSONByteLength: number\r\n  featureTableBinaryByteLength: number\r\n  batchTableJSONByteLength: number\r\n  batchTableBinaryByteLength: number\r\n  \r\n  constructor() {\r\n    super()\r\n  }\r\n}\r\n\r\nexport default PntsHeader","import IValidate from \"../../../../interfaces/IValidate\"\r\nimport IFTBinaryRef from \"../../../../interfaces/tileset/IFTBinaryRef\"\r\nimport IPntsFTJson from \"../../../../interfaces/tileset/IPntsFTJson\"\r\n\r\nimport FeatureTableType from \"../enum/featuretable-type\"\r\nimport FeatureTable from \"./featuretable-base\"\r\n\r\nfunction validatePntsFeatureTable(table: PntsFeatureTable): boolean {\r\n  if (table.position === undefined && table.positionQuantized === undefined) {\r\n    return false\r\n  }\r\n  if (table.batchId !== undefined && table.batchLength === undefined) {\r\n    return false\r\n  }\r\n  if (table.positionQuantized !== undefined) {\r\n    if (table.quantizedVolumeOffset === undefined || table.quantizedVolumeScale === undefined) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction parse(table: PntsFeatureTable) {\r\n  const json = table._json as IPntsFTJson\r\n  table.position = json['POSITION']\r\n  table.positionQuantized = json['POSITION_QUANTIZED']\r\n  table.rgba = json['RGBA']\r\n  table.rgb = json['RGB']\r\n  table.rgb565 = json['RGB565']\r\n  table.normal = json['NORMAL']\r\n  table.normalOct16p = json['NORMAL_OCT16P']\r\n  table.batchId = json['BATCH_ID']\r\n  table.pointsLength = json['POINTS_LENGTH']\r\n  table.quantizedVolumeOffset = json['QUANTIZED_VOLUME_OFFSET']\r\n  table.quantizedVolumeScale = json['QUANTIZED_VOLUME_SCALE']\r\n  table.constantRgba = json['CONSTANT_RGBA']\r\n\r\n  if (json['extensions'] !== undefined) {\r\n    table.extensions = new Set()\r\n    // todo\r\n  }\r\n  table.extras = json['extras']\r\n}\r\n\r\nclass PntsFeatureTable extends FeatureTable implements IValidate {\r\n\r\n  position?: IFTBinaryRef\r\n  positionQuantized?: IFTBinaryRef\r\n  rgba?: IFTBinaryRef\r\n  rgb?: IFTBinaryRef\r\n  rgb565?: IFTBinaryRef\r\n  normal?: IFTBinaryRef\r\n  normalOct16p?: IFTBinaryRef\r\n\r\n  pointsLength: number\r\n  \r\n  rtcCenter?: number[]\r\n  quantizedVolumeOffset?: number[]\r\n  quantizedVolumeScale?: number[]\r\n  constantRgba?: number[]\r\n  batchId?: any\r\n  batchLength?: number\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  static createFromJSON(json: Object, binary: Uint8Array) {\r\n    const ft = new PntsFeatureTable()\r\n    \r\n    ft._json = json\r\n    ft._binary = binary\r\n    ft.featureTableType = FeatureTableType.Pnts\r\n\r\n    parse(ft)\r\n\r\n    return ft\r\n  }\r\n\r\n  validate() {\r\n    return validatePntsFeatureTable(this)\r\n  }\r\n}\r\n\r\nexport default PntsFeatureTable","import { IOBuffer } from \"iobuffer\"\r\n\r\nimport IValidate from \"../../../../interfaces/IValidate\"\r\n\r\nimport { GLTFDocument } from \"../../../..\"\r\nimport PntsFeatureTable from \"../featuretable/featuretable-pnts\"\r\nimport PntsHeader from \"./header\"\r\nimport { BatchTable } from \"../batchtable\"\r\n\r\nfunction parseHeader(header: PntsHeader, io: IOBuffer) {\r\n  io.rewind()\r\n  header.magic = io.readChars(4)\r\n  header.version = io.readUint32()\r\n  header.byteLength = io.readUint32()\r\n  header.featureTableJSONByteLength = io.readUint32()\r\n  header.featureTableBinaryByteLength = io.readUint32()\r\n  header.batchTableJSONByteLength = io.readUint32()\r\n  header.batchTableBinaryByteLength = io.readUint32()\r\n}\r\n\r\nfunction parse(pnts: Pnts, buffer: ArrayBuffer) {\r\n  const iobuffer = new IOBuffer(buffer)\r\n  parseHeader(pnts.header, iobuffer)\r\n\r\n  if (pnts.byteLength % 8 != 0) {\r\n    throw new Error('[Pnts 实例化错误] byteLength 未 8 字节对齐。')\r\n  }\r\n\r\n  iobuffer.rewind()\r\n  iobuffer.skip(28)\r\n  const ftJSON = JSON.parse(iobuffer.readChars(pnts.featureTableJSONByteLength))\r\n  const ftBin = iobuffer.readBytes(pnts.featureTableBinaryByteLength)\r\n  pnts.featureTable = PntsFeatureTable.createFromJSON(ftJSON, ftBin)\r\n\r\n  if (pnts.batchTableJSONByteLength !== 0) {\r\n    const btJSON = JSON.parse(iobuffer.readChars(pnts.batchTableJSONByteLength))\r\n    const btBin = iobuffer.readBytes(pnts.batchTableBinaryByteLength)\r\n    pnts.batchTable = BatchTable.createFromJSON(btJSON, btBin)\r\n  }\r\n}\r\n\r\nclass Pnts implements IValidate {\r\n  header: PntsHeader\r\n  featureTable: PntsFeatureTable\r\n  batchTable?: BatchTable\r\n  parsedGLTF: GLTFDocument\r\n  buffer?: ArrayBuffer\r\n\r\n  constructor(buffer: ArrayBuffer, cacheBuffer = false) {\r\n    this.header = new PntsHeader()\r\n    parse(this, buffer)\r\n\r\n    if (cacheBuffer === true) {\r\n      this.buffer = buffer\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    return true\r\n  }\r\n\r\n  get magic() {\r\n    return this.header.magic\r\n  }\r\n\r\n  get byteLength() {\r\n    return this.header.byteLength\r\n  }\r\n\r\n  get version() {\r\n    return this.header.version\r\n  }\r\n\r\n  get featureTableJSONByteLength() {\r\n    return this.header.featureTableJSONByteLength\r\n  }\r\n\r\n  get featureTableBinaryByteLength() {\r\n    return this.header.featureTableBinaryByteLength\r\n  }\r\n\r\n  get batchTableJSONByteLength() {\r\n    return this.header.batchTableJSONByteLength\r\n  }\r\n\r\n  get batchTableBinaryByteLength() {\r\n    return this.header.batchTableBinaryByteLength\r\n  }\r\n\r\n  get sizeWithoutGLB() {\r\n    return 28 + \r\n    this.featureTableJSONByteLength + \r\n    this.featureTableBinaryByteLength + \r\n    this.batchTableJSONByteLength + \r\n    this.batchTableBinaryByteLength\r\n  }\r\n}\r\n\r\nexport default Pnts","class Cmpt {\r\n\r\n}\r\n\r\nexport default Cmpt","import IValidate from \"../../../../interfaces/IValidate\"\r\nimport IFTBinaryRef from \"../../../../interfaces/tileset/IFTBinaryRef\"\r\nimport IVctrFTJson from \"../../../../interfaces/tileset/IVctrFTJson\"\r\n\r\nimport FeatureTableType from \"../enum/featuretable-type\"\r\nimport FeatureTable from \"./featuretable-base\"\r\n\r\nfunction validateVctrFeatureTable(table: VctrFeatureTable) {\r\n  if (table.region.length !== 6) {\r\n    return false\r\n  }\r\n  if ((<number[]>table.rtcCenter).length !== 3) {\r\n    return false\r\n  }\r\n  if (table.polygonsLength !== undefined) {\r\n    if (table.polygonCounts === undefined || table.polygonIndexCounts === undefined) {\r\n      return false\r\n    }\r\n  }\r\n  if (table.polylinesLength !== undefined) {\r\n    if (table.polylineCounts === undefined) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction parse(table: VctrFeatureTable) {\r\n  const json = table._json as IVctrFTJson\r\n  table.region = json['REGION']\r\n  table.rtcCenter = json['RTC_CENTER']\r\n  table.polygonsLength = json['POLYGONS_LENGTH']\r\n  table.polylinesLength = json['POLYLINES_LENGTH']\r\n  table.pointsLength = json['POINTS_LENGTH']\r\n\r\n  table.polygonCounts = json['POLYGON_COUNTS']\r\n  table.polygonIndexCounts = json['POLYGON_INDEX_COUNTS']\r\n  table.polygonMinimumHeights = json['POLYGON_MINIMUM_HEIGHTS']\r\n  table.polygonMaximumHeights = json['POLYGON_MAXIMUM_HEIGHTS']\r\n\r\n  table.polylineCounts = json['POLYLINE_COUNTS']\r\n  table.polylineBatchIds = json['POLYLINE_BATCH_IDS']\r\n  table.pointBatchIds = json['POINT_BATCH_IDS']\r\n\r\n  if (json['extensions'] !== undefined) {\r\n    table.extensions = new Set()\r\n    // TODO\r\n  }\r\n  table.extras = json['extras']\r\n}\r\n\r\nclass VctrFeatureTable extends FeatureTable implements IValidate {\r\n  region: number[]\r\n  rtcCenter?: number[]\r\n  \r\n  polygonsLength?: number\r\n  polylinesLength?: number\r\n  pointsLength?: number\r\n  \r\n  polygonCounts?: IFTBinaryRef\r\n  polygonIndexCounts?: IFTBinaryRef\r\n  polygonMinimumHeights?: IFTBinaryRef\r\n  polygonMaximumHeights?: IFTBinaryRef\r\n  polygonBatchIds?: IFTBinaryRef\r\n  \r\n  polylineCounts?: IFTBinaryRef\r\n  polylineBatchIds?: IFTBinaryRef\r\n\r\n  pointBatchIds?: IFTBinaryRef\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  static createFromJSON(json: Object, binary: Uint8Array) {\r\n    const ft = new VctrFeatureTable()\r\n    \r\n    ft._json = json\r\n    ft._binary = binary\r\n    ft.featureTableType = FeatureTableType.Vctr\r\n\r\n    parse(ft)\r\n\r\n    return ft\r\n  }\r\n\r\n  validate() {\r\n    return validateVctrFeatureTable(this)\r\n  }\r\n}\r\n\r\nexport default VctrFeatureTable","enum TileRefine {\r\n  ADD = \"add\",\r\n  REPLACE = \"replace\"\r\n}\r\n\r\nexport default TileRefine"],"names":["GLTFVersion","GLTFComponentType","decode","GLTFBufferViewTarget","GLTFPrimitiveMode","GLTFAlphaMode","this","utf8_1","IOBuffer","MIME","GLTFVertexAttributeType","GLTFAttributeType","parse","FeatureTableType","parseHeader"],"mappings":"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"}